

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Mar 07 18:18:13 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F1823
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	intentry,global,class=CODE,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    28                           	dabs	1,0x7E,2
    29  0000                     
    30                           ; Version 2.20
    31                           ; Generated 12/02/2020 GMT
    32                           ; 
    33                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC16F1823 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     	;# 
    65  0001                     	;# 
    66  0002                     	;# 
    67  0003                     	;# 
    68  0004                     	;# 
    69  0005                     	;# 
    70  0006                     	;# 
    71  0007                     	;# 
    72  0008                     	;# 
    73  0009                     	;# 
    74  000A                     	;# 
    75  000B                     	;# 
    76  000C                     	;# 
    77  000E                     	;# 
    78  0011                     	;# 
    79  0012                     	;# 
    80  0015                     	;# 
    81  0016                     	;# 
    82  0016                     	;# 
    83  0017                     	;# 
    84  0018                     	;# 
    85  0019                     	;# 
    86  001A                     	;# 
    87  001B                     	;# 
    88  001C                     	;# 
    89  001E                     	;# 
    90  001F                     	;# 
    91  008C                     	;# 
    92  008E                     	;# 
    93  0091                     	;# 
    94  0092                     	;# 
    95  0095                     	;# 
    96  0096                     	;# 
    97  0097                     	;# 
    98  0098                     	;# 
    99  0099                     	;# 
   100  009A                     	;# 
   101  009B                     	;# 
   102  009B                     	;# 
   103  009C                     	;# 
   104  009D                     	;# 
   105  009E                     	;# 
   106  010C                     	;# 
   107  010E                     	;# 
   108  0111                     	;# 
   109  0112                     	;# 
   110  0113                     	;# 
   111  0114                     	;# 
   112  0115                     	;# 
   113  0116                     	;# 
   114  0117                     	;# 
   115  0118                     	;# 
   116  0119                     	;# 
   117  011A                     	;# 
   118  011B                     	;# 
   119  011D                     	;# 
   120  011D                     	;# 
   121  018C                     	;# 
   122  018E                     	;# 
   123  0191                     	;# 
   124  0191                     	;# 
   125  0192                     	;# 
   126  0193                     	;# 
   127  0193                     	;# 
   128  0193                     	;# 
   129  0194                     	;# 
   130  0195                     	;# 
   131  0196                     	;# 
   132  0199                     	;# 
   133  019A                     	;# 
   134  019B                     	;# 
   135  019B                     	;# 
   136  019B                     	;# 
   137  019B                     	;# 
   138  019C                     	;# 
   139  019C                     	;# 
   140  019D                     	;# 
   141  019E                     	;# 
   142  019F                     	;# 
   143  020C                     	;# 
   144  020E                     	;# 
   145  0211                     	;# 
   146  0211                     	;# 
   147  0212                     	;# 
   148  0212                     	;# 
   149  0213                     	;# 
   150  0213                     	;# 
   151  0214                     	;# 
   152  0214                     	;# 
   153  0215                     	;# 
   154  0215                     	;# 
   155  0215                     	;# 
   156  0216                     	;# 
   157  0216                     	;# 
   158  0217                     	;# 
   159  0217                     	;# 
   160  0291                     	;# 
   161  0291                     	;# 
   162  0292                     	;# 
   163  0293                     	;# 
   164  0294                     	;# 
   165  0295                     	;# 
   166  0295                     	;# 
   167  0296                     	;# 
   168  0391                     	;# 
   169  0392                     	;# 
   170  0393                     	;# 
   171  039A                     	;# 
   172  039C                     	;# 
   173  039D                     	;# 
   174  039E                     	;# 
   175  039F                     	;# 
   176  0FE4                     	;# 
   177  0FE5                     	;# 
   178  0FE6                     	;# 
   179  0FE7                     	;# 
   180  0FE8                     	;# 
   181  0FE9                     	;# 
   182  0FEA                     	;# 
   183  0FEB                     	;# 
   184  0FED                     	;# 
   185  0FEE                     	;# 
   186  0FEF                     	;# 
   187  0000                     	;# 
   188  0001                     	;# 
   189  0002                     	;# 
   190  0003                     	;# 
   191  0004                     	;# 
   192  0005                     	;# 
   193  0006                     	;# 
   194  0007                     	;# 
   195  0008                     	;# 
   196  0009                     	;# 
   197  000A                     	;# 
   198  000B                     	;# 
   199  000C                     	;# 
   200  000E                     	;# 
   201  0011                     	;# 
   202  0012                     	;# 
   203  0015                     	;# 
   204  0016                     	;# 
   205  0016                     	;# 
   206  0017                     	;# 
   207  0018                     	;# 
   208  0019                     	;# 
   209  001A                     	;# 
   210  001B                     	;# 
   211  001C                     	;# 
   212  001E                     	;# 
   213  001F                     	;# 
   214  008C                     	;# 
   215  008E                     	;# 
   216  0091                     	;# 
   217  0092                     	;# 
   218  0095                     	;# 
   219  0096                     	;# 
   220  0097                     	;# 
   221  0098                     	;# 
   222  0099                     	;# 
   223  009A                     	;# 
   224  009B                     	;# 
   225  009B                     	;# 
   226  009C                     	;# 
   227  009D                     	;# 
   228  009E                     	;# 
   229  010C                     	;# 
   230  010E                     	;# 
   231  0111                     	;# 
   232  0112                     	;# 
   233  0113                     	;# 
   234  0114                     	;# 
   235  0115                     	;# 
   236  0116                     	;# 
   237  0117                     	;# 
   238  0118                     	;# 
   239  0119                     	;# 
   240  011A                     	;# 
   241  011B                     	;# 
   242  011D                     	;# 
   243  011D                     	;# 
   244  018C                     	;# 
   245  018E                     	;# 
   246  0191                     	;# 
   247  0191                     	;# 
   248  0192                     	;# 
   249  0193                     	;# 
   250  0193                     	;# 
   251  0193                     	;# 
   252  0194                     	;# 
   253  0195                     	;# 
   254  0196                     	;# 
   255  0199                     	;# 
   256  019A                     	;# 
   257  019B                     	;# 
   258  019B                     	;# 
   259  019B                     	;# 
   260  019B                     	;# 
   261  019C                     	;# 
   262  019C                     	;# 
   263  019D                     	;# 
   264  019E                     	;# 
   265  019F                     	;# 
   266  020C                     	;# 
   267  020E                     	;# 
   268  0211                     	;# 
   269  0211                     	;# 
   270  0212                     	;# 
   271  0212                     	;# 
   272  0213                     	;# 
   273  0213                     	;# 
   274  0214                     	;# 
   275  0214                     	;# 
   276  0215                     	;# 
   277  0215                     	;# 
   278  0215                     	;# 
   279  0216                     	;# 
   280  0216                     	;# 
   281  0217                     	;# 
   282  0217                     	;# 
   283  0291                     	;# 
   284  0291                     	;# 
   285  0292                     	;# 
   286  0293                     	;# 
   287  0294                     	;# 
   288  0295                     	;# 
   289  0295                     	;# 
   290  0296                     	;# 
   291  0391                     	;# 
   292  0392                     	;# 
   293  0393                     	;# 
   294  039A                     	;# 
   295  039C                     	;# 
   296  039D                     	;# 
   297  039E                     	;# 
   298  039F                     	;# 
   299  0FE4                     	;# 
   300  0FE5                     	;# 
   301  0FE6                     	;# 
   302  0FE7                     	;# 
   303  0FE8                     	;# 
   304  0FE9                     	;# 
   305  0FEA                     	;# 
   306  0FEB                     	;# 
   307  0FED                     	;# 
   308  0FEE                     	;# 
   309  0FEF                     	;# 
   310  0000                     	;# 
   311  0001                     	;# 
   312  0002                     	;# 
   313  0003                     	;# 
   314  0004                     	;# 
   315  0005                     	;# 
   316  0006                     	;# 
   317  0007                     	;# 
   318  0008                     	;# 
   319  0009                     	;# 
   320  000A                     	;# 
   321  000B                     	;# 
   322  000C                     	;# 
   323  000E                     	;# 
   324  0011                     	;# 
   325  0012                     	;# 
   326  0015                     	;# 
   327  0016                     	;# 
   328  0016                     	;# 
   329  0017                     	;# 
   330  0018                     	;# 
   331  0019                     	;# 
   332  001A                     	;# 
   333  001B                     	;# 
   334  001C                     	;# 
   335  001E                     	;# 
   336  001F                     	;# 
   337  008C                     	;# 
   338  008E                     	;# 
   339  0091                     	;# 
   340  0092                     	;# 
   341  0095                     	;# 
   342  0096                     	;# 
   343  0097                     	;# 
   344  0098                     	;# 
   345  0099                     	;# 
   346  009A                     	;# 
   347  009B                     	;# 
   348  009B                     	;# 
   349  009C                     	;# 
   350  009D                     	;# 
   351  009E                     	;# 
   352  010C                     	;# 
   353  010E                     	;# 
   354  0111                     	;# 
   355  0112                     	;# 
   356  0113                     	;# 
   357  0114                     	;# 
   358  0115                     	;# 
   359  0116                     	;# 
   360  0117                     	;# 
   361  0118                     	;# 
   362  0119                     	;# 
   363  011A                     	;# 
   364  011B                     	;# 
   365  011D                     	;# 
   366  011D                     	;# 
   367  018C                     	;# 
   368  018E                     	;# 
   369  0191                     	;# 
   370  0191                     	;# 
   371  0192                     	;# 
   372  0193                     	;# 
   373  0193                     	;# 
   374  0193                     	;# 
   375  0194                     	;# 
   376  0195                     	;# 
   377  0196                     	;# 
   378  0199                     	;# 
   379  019A                     	;# 
   380  019B                     	;# 
   381  019B                     	;# 
   382  019B                     	;# 
   383  019B                     	;# 
   384  019C                     	;# 
   385  019C                     	;# 
   386  019D                     	;# 
   387  019E                     	;# 
   388  019F                     	;# 
   389  020C                     	;# 
   390  020E                     	;# 
   391  0211                     	;# 
   392  0211                     	;# 
   393  0212                     	;# 
   394  0212                     	;# 
   395  0213                     	;# 
   396  0213                     	;# 
   397  0214                     	;# 
   398  0214                     	;# 
   399  0215                     	;# 
   400  0215                     	;# 
   401  0215                     	;# 
   402  0216                     	;# 
   403  0216                     	;# 
   404  0217                     	;# 
   405  0217                     	;# 
   406  0291                     	;# 
   407  0291                     	;# 
   408  0292                     	;# 
   409  0293                     	;# 
   410  0294                     	;# 
   411  0295                     	;# 
   412  0295                     	;# 
   413  0296                     	;# 
   414  0391                     	;# 
   415  0392                     	;# 
   416  0393                     	;# 
   417  039A                     	;# 
   418  039C                     	;# 
   419  039D                     	;# 
   420  039E                     	;# 
   421  039F                     	;# 
   422  0FE4                     	;# 
   423  0FE5                     	;# 
   424  0FE6                     	;# 
   425  0FE7                     	;# 
   426  0FE8                     	;# 
   427  0FE9                     	;# 
   428  0FEA                     	;# 
   429  0FEB                     	;# 
   430  0FED                     	;# 
   431  0FEE                     	;# 
   432  0FEF                     	;# 
   433                           
   434                           	psect	stringtext1
   435  02A2                     __pstringtext1:
   436  02A2                     _numbers:
   437  02A2  3431               	retlw	49
   438  02A3  3432               	retlw	50
   439  02A4  3433               	retlw	51
   440  02A5  3434               	retlw	52
   441  02A6  3435               	retlw	53
   442  02A7  3436               	retlw	54
   443  02A8  3437               	retlw	55
   444  02A9  3438               	retlw	56
   445  02AA  3439               	retlw	57
   446  02AB  3400               	retlw	0
   447  02AC                     __end_of_numbers:
   448                           
   449                           	psect	stringtext2
   450  02AC                     __pstringtext2:
   451  02AC                     _sleepMsg:
   452  02AC  3453               	retlw	83
   453  02AD  346C               	retlw	108
   454  02AE  3465               	retlw	101
   455  02AF  3465               	retlw	101
   456  02B0  3470               	retlw	112
   457  02B1  3469               	retlw	105
   458  02B2  346E               	retlw	110
   459  02B3  3467               	retlw	103
   460  02B4  3400               	retlw	0
   461  02B5                     __end_of_sleepMsg:
   462                           
   463                           	psect	stringtext3
   464  02B5                     __pstringtext3:
   465  02B5                     _runningMsg:
   466  02B5  3452               	retlw	82
   467  02B6  3475               	retlw	117
   468  02B7  346E               	retlw	110
   469  02B8  346E               	retlw	110
   470  02B9  3469               	retlw	105
   471  02BA  346E               	retlw	110
   472  02BB  3467               	retlw	103
   473  02BC  3420               	retlw	32
   474  02BD  3400               	retlw	0
   475  02BE                     __end_of_runningMsg:
   476                           
   477                           	psect	stringtext4
   478  02BE                     __pstringtext4:
   479  02BE                     _startingMsg:
   480  02BE  3453               	retlw	83
   481  02BF  3474               	retlw	116
   482  02C0  3461               	retlw	97
   483  02C1  3472               	retlw	114
   484  02C2  3474               	retlw	116
   485  02C3  3469               	retlw	105
   486  02C4  346E               	retlw	110
   487  02C5  3467               	retlw	103
   488  02C6  3400               	retlw	0
   489  02C7                     __end_of_startingMsg:
   490  000B                     _INTCONbits	set	11
   491  0097                     _WDTCON	set	151
   492  0099                     _OSCCON	set	153
   493  008E                     _TRISC	set	142
   494  008C                     _TRISA	set	140
   495  04AF                     _nWPUEN	set	1199
   496  010E                     _LATC	set	270
   497  010C                     _LATA	set	268
   498  0875                     _LATC5	set	2165
   499  0873                     _LATC3	set	2163
   500  0862                     _LATA2	set	2146
   501  0870                     _LATC0	set	2160
   502  0871                     _LATC1	set	2161
   503  0872                     _LATC2	set	2162
   504  018E                     _ANSELC	set	398
   505  018C                     _ANSELA	set	396
   506  020E                     _WPUC	set	526
   507  020C                     _WPUA	set	524
   508  0392                     _IOCAN	set	914
   509  1C99                     _IOCAF1	set	7321
   510  1C98                     _IOCAF0	set	7320
   511                           
   512                           	psect	cinit
   513  0030                     start_initialization:	
   514                           ; #config settings
   515                           
   516  0030                     __initialization:
   517  0030                     end_of_initialization:	
   518                           ;End of C runtime variable initialization code
   519                           
   520  0030                     __end_of__initialization:
   521  0030  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   522  0031  0020               	movlb	0
   523  0032  2833               	ljmp	_main	;jump to C main() function
   524                           
   525                           	psect	cstackCOMMON
   526  0070                     __pcstackCOMMON:
   527  0070                     ?_writebyteLCD:
   528  0070                     ?_clockE:	
   529                           ; 1 bytes @ 0x0
   530                           
   531  0070                     ?_lcd_Initialize:	
   532                           ; 1 bytes @ 0x0
   533                           
   534  0070                     ?_main:	
   535                           ; 1 bytes @ 0x0
   536                           
   537  0070                     ?_isr:	
   538                           ; 1 bytes @ 0x0
   539                           
   540  0070                     ?i1_writebyteLCD:	
   541                           ; 1 bytes @ 0x0
   542                           
   543  0070                     ??i1_writebyteLCD:	
   544                           ; 1 bytes @ 0x0
   545                           
   546  0070                     ?i1_clockE:	
   547                           ; 1 bytes @ 0x0
   548                           
   549  0070                     ??i1_clockE:	
   550                           ; 1 bytes @ 0x0
   551                           
   552  0070                     ?i1_strlen:	
   553                           ; 1 bytes @ 0x0
   554                           
   555  0070                     i1writebyteLCD@out:	
   556                           ; 2 bytes @ 0x0
   557                           
   558  0070                     i1strlen@s:	
   559                           ; 1 bytes @ 0x0
   560                           
   561                           
   562                           ; 2 bytes @ 0x0
   563  0070                     	ds	2
   564  0072                     ?i1_writeLCD:
   565  0072                     ??i1_strlen:	
   566                           ; 1 bytes @ 0x2
   567                           
   568  0072                     i1writeLCD@rs:	
   569                           ; 1 bytes @ 0x2
   570                           
   571                           
   572                           ; 1 bytes @ 0x2
   573  0072                     	ds	1
   574  0073                     ??i1_writeLCD:
   575  0073                     i1strlen@a:	
   576                           ; 1 bytes @ 0x3
   577                           
   578                           
   579                           ; 2 bytes @ 0x3
   580  0073                     	ds	2
   581  0075                     i1writeLCD@out:
   582                           
   583                           ; 1 bytes @ 0x5
   584  0075                     	ds	1
   585  0076                     ?i1_goTo:
   586  0076                     ?i1_stringToLCD:	
   587                           ; 1 bytes @ 0x6
   588                           
   589  0076                     i1goTo@line:	
   590                           ; 1 bytes @ 0x6
   591                           
   592  0076                     i1stringToLCD@message:	
   593                           ; 1 bytes @ 0x6
   594                           
   595                           
   596                           ; 2 bytes @ 0x6
   597  0076                     	ds	1
   598  0077                     ??i1_goTo:
   599                           
   600                           ; 1 bytes @ 0x7
   601  0077                     	ds	1
   602  0078                     ??i1_stringToLCD:
   603  0078                     i1goTo@pos:	
   604                           ; 1 bytes @ 0x8
   605                           
   606                           
   607                           ; 1 bytes @ 0x8
   608  0078                     	ds	2
   609  007A                     i1stringToLCD@i:
   610                           
   611                           ; 2 bytes @ 0xA
   612  007A                     	ds	2
   613  007C                     i1stringToLCD@x:
   614                           
   615                           ; 1 bytes @ 0xC
   616  007C                     	ds	1
   617  007D                     ??_isr:
   618                           
   619                           	psect	cstackBANK0
   620  0020                     __pcstackBANK0:	
   621                           ; 1 bytes @ 0xD
   622                           
   623  0020                     ??_writebyteLCD:
   624  0020                     ??_clockE:	
   625                           ; 1 bytes @ 0x0
   626                           
   627  0020                     ?_strlen:	
   628                           ; 1 bytes @ 0x0
   629                           
   630  0020                     writebyteLCD@out:	
   631                           ; 2 bytes @ 0x0
   632                           
   633  0020                     strlen@s:	
   634                           ; 1 bytes @ 0x0
   635                           
   636                           
   637                           ; 2 bytes @ 0x0
   638  0020                     	ds	2
   639  0022                     ??_strlen:
   640  0022                     ?_writeLCD:	
   641                           ; 1 bytes @ 0x2
   642                           
   643  0022                     writeLCD@rs:	
   644                           ; 1 bytes @ 0x2
   645                           
   646                           
   647                           ; 1 bytes @ 0x2
   648  0022                     	ds	1
   649  0023                     ??_writeLCD:
   650  0023                     strlen@a:	
   651                           ; 1 bytes @ 0x3
   652                           
   653                           
   654                           ; 2 bytes @ 0x3
   655  0023                     	ds	2
   656  0025                     writeLCD@out:
   657                           
   658                           ; 1 bytes @ 0x5
   659  0025                     	ds	1
   660  0026                     ??_lcd_Initialize:
   661  0026                     ?_goTo:	
   662                           ; 1 bytes @ 0x6
   663                           
   664  0026                     ?_lcdDisplay:	
   665                           ; 1 bytes @ 0x6
   666                           
   667  0026                     ?_stringToLCD:	
   668                           ; 1 bytes @ 0x6
   669                           
   670  0026                     goTo@line:	
   671                           ; 1 bytes @ 0x6
   672                           
   673  0026                     lcdDisplay@C:	
   674                           ; 1 bytes @ 0x6
   675                           
   676  0026                     stringToLCD@message:	
   677                           ; 1 bytes @ 0x6
   678                           
   679                           
   680                           ; 2 bytes @ 0x6
   681  0026                     	ds	1
   682  0027                     ??_goTo:
   683  0027                     lcdDisplay@B:	
   684                           ; 1 bytes @ 0x7
   685                           
   686                           
   687                           ; 1 bytes @ 0x7
   688  0027                     	ds	1
   689  0028                     ??_lcdDisplay:
   690  0028                     ??_stringToLCD:	
   691                           ; 1 bytes @ 0x8
   692                           
   693  0028                     goTo@pos:	
   694                           ; 1 bytes @ 0x8
   695                           
   696  0028                     lcdDisplay@D:	
   697                           ; 1 bytes @ 0x8
   698                           
   699                           
   700                           ; 1 bytes @ 0x8
   701  0028                     	ds	2
   702  002A                     stringToLCD@i:
   703                           
   704                           ; 2 bytes @ 0xA
   705  002A                     	ds	2
   706  002C                     stringToLCD@x:
   707                           
   708                           ; 1 bytes @ 0xC
   709  002C                     	ds	1
   710  002D                     ??_main:
   711                           
   712                           ; 1 bytes @ 0xD
   713  002D                     	ds	2
   714  002F                     main@x:
   715                           
   716                           ; 1 bytes @ 0xF
   717  002F                     	ds	1
   718                           
   719                           	psect	maintext
   720  0033                     __pmaintext:	
   721 ;;
   722 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   723 ;;
   724 ;; *************** function _main *****************
   725 ;; Defined at:
   726 ;;		line 65 in file "watchdog_demo.c"
   727 ;; Parameters:    Size  Location     Type
   728 ;;		None
   729 ;; Auto vars:     Size  Location     Type
   730 ;;  x               1   15[BANK0 ] unsigned char 
   731 ;; Return value:  Size  Location     Type
   732 ;;                  1    wreg      void 
   733 ;; Registers used:
   734 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   735 ;; Tracked objects:
   736 ;;		On entry : B1F/0
   737 ;;		On exit  : 0/0
   738 ;;		Unchanged: 0/0
   739 ;; Data sizes:     COMMON   BANK0   BANK1
   740 ;;      Params:         0       0       0
   741 ;;      Locals:         0       1       0
   742 ;;      Temps:          0       2       0
   743 ;;      Totals:         0       3       0
   744 ;;Total ram usage:        3 bytes
   745 ;; Hardware stack levels required when called:    7
   746 ;; This function calls:
   747 ;;		_goTo
   748 ;;		_lcdDisplay
   749 ;;		_lcd_Initialize
   750 ;;		_stringToLCD
   751 ;;		_writeLCD
   752 ;; This function is called by:
   753 ;;		Startup code after reset
   754 ;; This function uses a non-reentrant model
   755 ;;
   756                           
   757                           
   758                           ;psect for function _main
   759  0033                     _main:
   760  0033                     l1183:	
   761                           ;incstack = 0
   762                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   763                           
   764                           
   765                           ;watchdog_demo.c: 68:     LATA = 0x00;
   766  0033  0022               	movlb	2	; select bank2
   767  0034  018C               	clrf	12	;volatile
   768  0035                     l1185:
   769                           
   770                           ;watchdog_demo.c: 69:     TRISA = 0x3b;
   771  0035  303B               	movlw	59
   772  0036  0021               	movlb	1	; select bank1
   773  0037  008C               	movwf	12	;volatile
   774  0038                     l1187:
   775                           
   776                           ;watchdog_demo.c: 70:     ANSELA = 0x00;
   777  0038  0023               	movlb	3	; select bank3
   778  0039  018C               	clrf	12	;volatile
   779                           
   780                           ;watchdog_demo.c: 71:     WPUA = 0x03;
   781  003A  3003               	movlw	3
   782  003B  0024               	movlb	4	; select bank4
   783  003C  008C               	movwf	12	;volatile
   784  003D                     l1189:
   785                           
   786                           ;watchdog_demo.c: 74:     LATC = 0x00;
   787  003D  0022               	movlb	2	; select bank2
   788  003E  018E               	clrf	14	;volatile
   789  003F                     l1191:
   790                           
   791                           ;watchdog_demo.c: 75:     ANSELC = 0x00;
   792  003F  0023               	movlb	3	; select bank3
   793  0040  018E               	clrf	14	;volatile
   794  0041                     l1193:
   795                           
   796                           ;watchdog_demo.c: 76:     TRISC = 0x00;
   797  0041  0021               	movlb	1	; select bank1
   798  0042  018E               	clrf	14	;volatile
   799  0043                     l1195:
   800                           
   801                           ;watchdog_demo.c: 77:     WPUC = 0x00;
   802  0043  0024               	movlb	4	; select bank4
   803  0044  018E               	clrf	14	;volatile
   804  0045                     l1197:
   805                           
   806                           ;watchdog_demo.c: 79:     nWPUEN = 0;
   807  0045  0021               	movlb	1	; select bank1
   808  0046  1395               	bcf	21,7	;volatile
   809                           
   810                           ;watchdog_demo.c: 81:     OSCCON = 0x58;
   811  0047  3058               	movlw	88
   812  0048  0099               	movwf	25	;volatile
   813                           
   814                           ;watchdog_demo.c: 83:     WDTCON = 0x18;
   815  0049  3018               	movlw	24
   816  004A  0097               	movwf	23	;volatile
   817                           
   818                           ;watchdog_demo.c: 85:     IOCAN = 0x03;
   819  004B  3003               	movlw	3
   820  004C  0027               	movlb	7	; select bank7
   821  004D  0092               	movwf	18	;volatile
   822  004E                     l1199:
   823                           
   824                           ;watchdog_demo.c: 86:     INTCONbits.IOCIE = 1;
   825  004E  158B               	bsf	11,3	;volatile
   826  004F                     l1201:
   827                           
   828                           ;watchdog_demo.c: 87:     (INTCONbits.GIE = 1);
   829  004F  178B               	bsf	11,7	;volatile
   830  0050                     l1203:
   831                           
   832                           ;watchdog_demo.c: 89:     lcd_Initialize();
   833  0050  3180  20B9  3180   	fcall	_lcd_Initialize
   834  0053                     l1205:
   835                           
   836                           ;watchdog_demo.c: 90:     lcdDisplay(1,0,0);
   837  0053  0020               	movlb	0	; select bank0
   838  0054  01A6               	clrf	lcdDisplay@C
   839  0055  01A7               	clrf	lcdDisplay@B
   840  0056  3001               	movlw	1
   841  0057  3182  2270  3180   	fcall	_lcdDisplay
   842  005A                     l1207:
   843                           
   844                           ;watchdog_demo.c: 92:     goTo(4,0);
   845  005A  0020               	movlb	0	; select bank0
   846  005B  01A6               	clrf	goTo@line
   847  005C  3004               	movlw	4
   848  005D  3182  2217  3180   	fcall	_goTo
   849  0060                     l1209:
   850                           
   851                           ;watchdog_demo.c: 93:     stringToLCD(startingMsg);
   852  0060  30BE               	movlw	low (_startingMsg| (0+32768))
   853  0061  0020               	movlb	0	; select bank0
   854  0062  00A6               	movwf	stringToLCD@message
   855  0063  3082               	movlw	high (_startingMsg| (0+32768))
   856  0064  00A7               	movwf	stringToLCD@message+1
   857  0065  3181  211B  3180   	fcall	_stringToLCD
   858  0068                     l1211:
   859                           
   860                           ;watchdog_demo.c: 94:     _delay((unsigned long)((1000)*(1000000/4000.0)));
   861  0068  3002               	movlw	2
   862  0069  0020               	movlb	0	; select bank0
   863  006A  00AE               	movwf	??_main+1
   864  006B  3045               	movlw	69
   865  006C  00AD               	movwf	??_main
   866  006D  30A9               	movlw	169
   867  006E                     u717:
   868  006E  0B89               	decfsz	9,f
   869  006F  286E               	goto	u717
   870  0070  0BAD               	decfsz	??_main,f
   871  0071  286E               	goto	u717
   872  0072  0BAE               	decfsz	??_main+1,f
   873  0073  286E               	goto	u717
   874  0074  3200               	nop2
   875  0075                     l1213:
   876                           
   877                           ;watchdog_demo.c: 97:     {;watchdog_demo.c: 98:         goTo(4,0);
   878  0075  0020               	movlb	0	; select bank0
   879  0076  01A6               	clrf	goTo@line
   880  0077  3004               	movlw	4
   881  0078  3182  2217  3180   	fcall	_goTo
   882                           
   883                           ;watchdog_demo.c: 99:         stringToLCD(runningMsg);
   884  007B  30B5               	movlw	low (_runningMsg| (0+32768))
   885  007C  0020               	movlb	0	; select bank0
   886  007D  00A6               	movwf	stringToLCD@message
   887  007E  3082               	movlw	high (_runningMsg| (0+32768))
   888  007F  00A7               	movwf	stringToLCD@message+1
   889  0080  3181  211B  3180   	fcall	_stringToLCD
   890  0083                     l1215:
   891                           
   892                           ;watchdog_demo.c: 101:         for (unsigned char x=0;x<9;x++)
   893  0083  0020               	movlb	0	; select bank0
   894  0084  01AF               	clrf	main@x
   895  0085                     l1221:
   896                           
   897                           ;watchdog_demo.c: 102:         {;watchdog_demo.c: 103:             goTo(2,1);
   898  0085  01A6               	clrf	goTo@line
   899  0086  0AA6               	incf	goTo@line,f
   900  0087  3002               	movlw	2
   901  0088  3182  2217  3180   	fcall	_goTo
   902  008B                     l1223:
   903                           
   904                           ;watchdog_demo.c: 104:             writeLCD(numbers[x],1);
   905  008B  0020               	movlb	0	; select bank0
   906  008C  01A2               	clrf	writeLCD@rs
   907  008D  0AA2               	incf	writeLCD@rs,f
   908  008E  082F               	movf	main@x,w
   909  008F  3EA2               	addlw	low (_numbers| (0+32768))
   910  0090  0084               	movwf	4
   911  0091  3082               	movlw	high (_numbers| (0+32768))
   912  0092  1803               	skipnc
   913  0093  3E01               	addlw	1
   914  0094  0085               	movwf	5
   915  0095  0800               	movf	0,w	;code access
   916  0096  3181  217E  3180   	fcall	_writeLCD
   917  0099                     l1225:
   918                           
   919                           ;watchdog_demo.c: 105:             _delay((unsigned long)((1000)*(1000000/4000.0)));
   920  0099  3002               	movlw	2
   921  009A  0020               	movlb	0	; select bank0
   922  009B  00AE               	movwf	??_main+1
   923  009C  3045               	movlw	69
   924  009D  00AD               	movwf	??_main
   925  009E  30A9               	movlw	169
   926  009F                     u727:
   927  009F  0B89               	decfsz	9,f
   928  00A0  289F               	goto	u727
   929  00A1  0BAD               	decfsz	??_main,f
   930  00A2  289F               	goto	u727
   931  00A3  0BAE               	decfsz	??_main+1,f
   932  00A4  289F               	goto	u727
   933  00A5  3200               	nop2
   934  00A6                     l1227:
   935                           
   936                           ;watchdog_demo.c: 106:             writeLCD(0x10, 0);
   937  00A6  0020               	movlb	0	; select bank0
   938  00A7  01A2               	clrf	writeLCD@rs
   939  00A8  3010               	movlw	16
   940  00A9  3181  217E  3180   	fcall	_writeLCD
   941  00AC                     l1229:
   942                           
   943                           ;watchdog_demo.c: 107:         }
   944  00AC  3001               	movlw	1
   945  00AD  0020               	movlb	0	; select bank0
   946  00AE  00AD               	movwf	??_main
   947  00AF  082D               	movf	??_main,w
   948  00B0  07AF               	addwf	main@x,f
   949  00B1                     l1231:
   950  00B1  3009               	movlw	9
   951  00B2  022F               	subwf	main@x,w
   952  00B3  1C03               	skipc
   953  00B4  28B6               	goto	u681
   954  00B5  28B7               	goto	u680
   955  00B6                     u681:
   956  00B6  2885               	goto	l1221
   957  00B7                     u680:
   958  00B7  2875               	goto	l1213
   959  00B8  282F               	ljmp	start
   960  00B9                     __end_of_main:
   961                           
   962                           	psect	text1
   963  011B                     __ptext1:	
   964 ;; *************** function _stringToLCD *****************
   965 ;; Defined at:
   966 ;;		line 159 in file "../../Assignment Four/ET420_Assignment4_Morrissey.X/lcd.c"
   967 ;; Parameters:    Size  Location     Type
   968 ;;  message         2    6[BANK0 ] PTR unsigned char 
   969 ;;		 -> sleepMsg(9), runningMsg(9), startingMsg(9), 
   970 ;; Auto vars:     Size  Location     Type
   971 ;;  x               1   12[BANK0 ] unsigned char 
   972 ;;  i               2   10[BANK0 ] unsigned int 
   973 ;; Return value:  Size  Location     Type
   974 ;;                  1    wreg      void 
   975 ;; Registers used:
   976 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   977 ;; Tracked objects:
   978 ;;		On entry : 0/0
   979 ;;		On exit  : 0/0
   980 ;;		Unchanged: 0/0
   981 ;; Data sizes:     COMMON   BANK0   BANK1
   982 ;;      Params:         0       2       0
   983 ;;      Locals:         0       3       0
   984 ;;      Temps:          0       2       0
   985 ;;      Totals:         0       7       0
   986 ;;Total ram usage:        7 bytes
   987 ;; Hardware stack levels used:    1
   988 ;; Hardware stack levels required when called:    6
   989 ;; This function calls:
   990 ;;		_strlen
   991 ;;		_writeLCD
   992 ;; This function is called by:
   993 ;;		_main
   994 ;; This function uses a non-reentrant model
   995 ;;
   996                           
   997                           
   998                           ;psect for function _stringToLCD
   999  011B                     _stringToLCD:
  1000  011B                     l1137:	
  1001                           ;incstack = 0
  1002                           ; Regs used in _stringToLCD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1003                           
  1004                           
  1005                           ;../../Assignment Four/ET420_Assignment4_Morrissey.X/lcd.c: 159:     void stringToLCD(ch
      +                          ar message[]);../../Assignment Four/ET420_Assignment4_Morrissey.X/lcd.c: 160: {;../../As
      +                          signment Four/ET420_Assignment4_Morrissey.X/lcd.c: 161:     unsigned int i = strlen(mess
      +                          age);
  1006  011B  0020               	movlb	0	; select bank0
  1007  011C  0827               	movf	stringToLCD@message+1,w
  1008  011D  00A1               	movwf	strlen@s+1
  1009  011E  0826               	movf	stringToLCD@message,w
  1010  011F  00A0               	movwf	strlen@s
  1011  0120  3182  2256  3181   	fcall	_strlen
  1012  0123  0020               	movlb	0	; select bank0
  1013  0124  0821               	movf	?_strlen+1,w
  1014  0125  00AB               	movwf	stringToLCD@i+1
  1015  0126  0820               	movf	?_strlen,w
  1016  0127  00AA               	movwf	stringToLCD@i
  1017  0128                     l1139:
  1018                           
  1019                           ;../../Assignment Four/ET420_Assignment4_Morrissey.X/lcd.c: 162:     for(char x = 0; x<i
      +                          ; x++)
  1020  0128  01AC               	clrf	stringToLCD@x
  1021  0129  2940               	goto	l1145
  1022  012A                     l1141:
  1023                           
  1024                           ;../../Assignment Four/ET420_Assignment4_Morrissey.X/lcd.c: 163:     {;../../Assignment 
      +                          Four/ET420_Assignment4_Morrissey.X/lcd.c: 164:         writeLCD(message[x],1);
  1025  012A  01A2               	clrf	writeLCD@rs
  1026  012B  0AA2               	incf	writeLCD@rs,f
  1027  012C  0827               	movf	stringToLCD@message+1,w
  1028  012D  00A9               	movwf	??_stringToLCD+1
  1029  012E  0826               	movf	stringToLCD@message,w
  1030  012F  00A8               	movwf	??_stringToLCD
  1031  0130  082C               	movf	stringToLCD@x,w
  1032  0131  0728               	addwf	??_stringToLCD,w
  1033  0132  0084               	movwf	4
  1034  0133  0829               	movf	??_stringToLCD+1,w
  1035  0134  1803               	skipnc
  1036  0135  0A29               	incf	??_stringToLCD+1,w
  1037  0136  0085               	movwf	5
  1038  0137  0800               	movf	0,w	;code access
  1039  0138  3181  217E  3181   	fcall	_writeLCD
  1040  013B                     l1143:
  1041                           
  1042                           ;../../Assignment Four/ET420_Assignment4_Morrissey.X/lcd.c: 165:     }
  1043  013B  3001               	movlw	1
  1044  013C  0020               	movlb	0	; select bank0
  1045  013D  00A8               	movwf	??_stringToLCD
  1046  013E  0828               	movf	??_stringToLCD,w
  1047  013F  07AC               	addwf	stringToLCD@x,f
  1048  0140                     l1145:
  1049  0140  082C               	movf	stringToLCD@x,w
  1050  0141  00A8               	movwf	??_stringToLCD
  1051  0142  01A9               	clrf	??_stringToLCD+1
  1052  0143  082B               	movf	stringToLCD@i+1,w
  1053  0144  0229               	subwf	??_stringToLCD+1,w
  1054  0145  1D03               	skipz
  1055  0146  2949               	goto	u645
  1056  0147  082A               	movf	stringToLCD@i,w
  1057  0148  0228               	subwf	??_stringToLCD,w
  1058  0149                     u645:
  1059  0149  1C03               	skipc
  1060  014A  294C               	goto	u641
  1061  014B  294D               	goto	u640
  1062  014C                     u641:
  1063  014C  292A               	goto	l1141
  1064  014D                     u640:
  1065  014D                     l50:
  1066  014D  0008               	return
  1067  014E                     __end_of_stringToLCD:
  1068                           
  1069                           	psect	text2
  1070  0256                     __ptext2:	
  1071 ;; *************** function _strlen *****************
  1072 ;; Defined at:
  1073 ;;		line 5 in file "C:\Program Files\Microchip\pic\sources\c99\common\strlen.c"
  1074 ;; Parameters:    Size  Location     Type
  1075 ;;  s               2    0[BANK0 ] PTR const unsigned char 
  1076 ;;		 -> sleepMsg(9), runningMsg(9), startingMsg(9), 
  1077 ;; Auto vars:     Size  Location     Type
  1078 ;;  a               2    3[BANK0 ] PTR const unsigned char 
  1079 ;;		 -> sleepMsg(9), runningMsg(9), startingMsg(9), 
  1080 ;; Return value:  Size  Location     Type
  1081 ;;                  2    0[BANK0 ] unsigned int 
  1082 ;; Registers used:
  1083 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1084 ;; Tracked objects:
  1085 ;;		On entry : 0/0
  1086 ;;		On exit  : 0/0
  1087 ;;		Unchanged: 0/0
  1088 ;; Data sizes:     COMMON   BANK0   BANK1
  1089 ;;      Params:         0       2       0
  1090 ;;      Locals:         0       2       0
  1091 ;;      Temps:          0       1       0
  1092 ;;      Totals:         0       5       0
  1093 ;;Total ram usage:        5 bytes
  1094 ;; Hardware stack levels used:    1
  1095 ;; Hardware stack levels required when called:    4
  1096 ;; This function calls:
  1097 ;;		Nothing
  1098 ;; This function is called by:
  1099 ;;		_stringToLCD
  1100 ;; This function uses a non-reentrant model
  1101 ;;
  1102                           
  1103                           
  1104                           ;psect for function _strlen
  1105  0256                     _strlen:
  1106  0256                     l1039:	
  1107                           ;incstack = 0
  1108                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
  1109                           
  1110  0256  0020               	movlb	0	; select bank0
  1111  0257  0821               	movf	strlen@s+1,w
  1112  0258  00A4               	movwf	strlen@a+1
  1113  0259  0820               	movf	strlen@s,w
  1114  025A  00A3               	movwf	strlen@a
  1115  025B  2A60               	goto	l1043
  1116  025C                     l1041:
  1117  025C  3001               	movlw	1
  1118  025D  07A0               	addwf	strlen@s,f
  1119  025E  3000               	movlw	0
  1120  025F  3DA1               	addwfc	strlen@s+1,f
  1121  0260                     l1043:
  1122  0260  0820               	movf	strlen@s,w
  1123  0261  0084               	movwf	4
  1124  0262  0821               	movf	strlen@s+1,w
  1125  0263  0085               	movwf	5
  1126  0264  0012               	moviw fsr0++
  1127  0265  1D03               	btfss	3,2
  1128  0266  2A68               	goto	u551
  1129  0267  2A69               	goto	u550
  1130  0268                     u551:
  1131  0268  2A5C               	goto	l1041
  1132  0269                     u550:
  1133  0269                     l1045:
  1134  0269  0823               	movf	strlen@a,w
  1135  026A  0220               	subwf	strlen@s,w
  1136  026B  00A0               	movwf	?_strlen
  1137  026C  0824               	movf	strlen@a+1,w
  1138  026D  3B21               	subwfb	strlen@s+1,w
  1139  026E  00A1               	movwf	?_strlen+1
  1140  026F                     l731:
  1141  026F  0008               	return
  1142  0270                     __end_of_strlen:
  1143                           
  1144                           	psect	text3
  1145  00B9                     __ptext3:	
  1146 ;; *************** function _lcd_Initialize *****************
  1147 ;; Defined at:
  1148 ;;		line 51 in file "../../Assignment Four/ET420_Assignment4_Morrissey.X/lcd.c"
  1149 ;; Parameters:    Size  Location     Type
  1150 ;;		None
  1151 ;; Auto vars:     Size  Location     Type
  1152 ;;		None
  1153 ;; Return value:  Size  Location     Type
  1154 ;;                  1    wreg      void 
  1155 ;; Registers used:
  1156 ;;		wreg, status,2, status,0, pclath, cstack
  1157 ;; Tracked objects:
  1158 ;;		On entry : 0/0
  1159 ;;		On exit  : 0/0
  1160 ;;		Unchanged: 0/0
  1161 ;; Data sizes:     COMMON   BANK0   BANK1
  1162 ;;      Params:         0       0       0
  1163 ;;      Locals:         0       0       0
  1164 ;;      Temps:          0       1       0
  1165 ;;      Totals:         0       1       0
  1166 ;;Total ram usage:        1 bytes
  1167 ;; Hardware stack levels used:    1
  1168 ;; Hardware stack levels required when called:    6
  1169 ;; This function calls:
  1170 ;;		_clockE
  1171 ;;		_writeLCD
  1172 ;;		_writebyteLCD
  1173 ;; This function is called by:
  1174 ;;		_main
  1175 ;; This function uses a non-reentrant model
  1176 ;;
  1177                           
  1178                           
  1179                           ;psect for function _lcd_Initialize
  1180  00B9                     _lcd_Initialize:
  1181  00B9                     l1073:	
  1182                           ;incstack = 0
  1183                           ; Regs used in _lcd_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1184                           
  1185                           
  1186                           ;../../Assignment Four/ET420_Assignment4_Morrissey.X/lcd.c: 54:     _delay((unsigned lon
      +                          g)((15)*(1000000/4000.0)));
  1187  00B9  3005               	movlw	5
  1188  00BA  0020               	movlb	0	; select bank0
  1189  00BB  00A6               	movwf	??_lcd_Initialize
  1190  00BC  30DD               	movlw	221
  1191  00BD                     u737:
  1192  00BD  0B89               	decfsz	9,f
  1193  00BE  28BD               	goto	u737
  1194  00BF  0BA6               	decfsz	??_lcd_Initialize,f
  1195  00C0  28BD               	goto	u737
  1196  00C1  3200               	nop2
  1197  00C2                     l1075:
  1198                           
  1199                           ;../../Assignment Four/ET420_Assignment4_Morrissey.X/lcd.c: 55:     LATC5 = 0;
  1200  00C2  0022               	movlb	2	; select bank2
  1201  00C3  128E               	bcf	14,5	;volatile
  1202  00C4                     l1077:
  1203                           
  1204                           ;../../Assignment Four/ET420_Assignment4_Morrissey.X/lcd.c: 59:     writebyteLCD(0x30);
  1205  00C4  3030               	movlw	48
  1206  00C5  3181  21CF  3180   	fcall	_writebyteLCD
  1207                           
  1208                           ;../../Assignment Four/ET420_Assignment4_Morrissey.X/lcd.c: 60:     clockE();
  1209  00C8  3182  22C7  3180   	fcall	_clockE
  1210  00CB                     l1079:
  1211                           
  1212                           ;../../Assignment Four/ET420_Assignment4_Morrissey.X/lcd.c: 64:     _delay((unsigned lon
      +                          g)((5)*(1000000/4000.0)));
  1213  00CB  30FA               	movlw	250
  1214  00CC                     u747:
  1215  00CC  3200               	nop2
  1216  00CD  0B89               	decfsz	9,f
  1217  00CE  28CC               	goto	u747
  1218  00CF                     l1081:
  1219                           
  1220                           ;../../Assignment Four/ET420_Assignment4_Morrissey.X/lcd.c: 65:     clockE();
  1221  00CF  3182  22C7  3180   	fcall	_clockE
  1222                           
  1223                           ;../../Assignment Four/ET420_Assignment4_Morrissey.X/lcd.c: 69:     _delay((unsigned lon
      +                          g)((200)*(1000000/4000000.0)));
  1224  00D2  3010               	movlw	16
  1225  00D3                     u757:
  1226  00D3  0B89               	decfsz	9,f
  1227  00D4  28D3               	goto	u757
  1228  00D5  3200               	nop2
  1229  00D6                     l1083:
  1230                           
  1231                           ;../../Assignment Four/ET420_Assignment4_Morrissey.X/lcd.c: 70:     clockE();
  1232  00D6  3182  22C7  3180   	fcall	_clockE
  1233  00D9                     l1085:
  1234                           
  1235                           ;../../Assignment Four/ET420_Assignment4_Morrissey.X/lcd.c: 74:     _delay((unsigned lon
      +                          g)((200)*(1000000/4000000.0)));
  1236  00D9  3010               	movlw	16
  1237  00DA                     u767:
  1238  00DA  0B89               	decfsz	9,f
  1239  00DB  28DA               	goto	u767
  1240  00DC  3200               	nop2
  1241  00DD                     l1087:
  1242                           
  1243                           ;../../Assignment Four/ET420_Assignment4_Morrissey.X/lcd.c: 75:     writebyteLCD(0x20);
  1244  00DD  3020               	movlw	32
  1245  00DE  3181  21CF  3180   	fcall	_writebyteLCD
  1246  00E1                     l1089:
  1247                           
  1248                           ;../../Assignment Four/ET420_Assignment4_Morrissey.X/lcd.c: 76:     clockE();
  1249  00E1  3182  22C7  3180   	fcall	_clockE
  1250  00E4                     l1091:
  1251                           
  1252                           ;../../Assignment Four/ET420_Assignment4_Morrissey.X/lcd.c: 80:     _delay((unsigned lon
      +                          g)((200)*(1000000/4000000.0)));
  1253  00E4  3010               	movlw	16
  1254  00E5                     u777:
  1255  00E5  0B89               	decfsz	9,f
  1256  00E6  28E5               	goto	u777
  1257  00E7  3200               	nop2
  1258  00E8                     l1093:
  1259                           
  1260                           ;../../Assignment Four/ET420_Assignment4_Morrissey.X/lcd.c: 81:     writeLCD(0x28,0);
  1261  00E8  0020               	movlb	0	; select bank0
  1262  00E9  01A2               	clrf	writeLCD@rs
  1263  00EA  3028               	movlw	40
  1264  00EB  3181  217E  3180   	fcall	_writeLCD
  1265                           
  1266                           ;../../Assignment Four/ET420_Assignment4_Morrissey.X/lcd.c: 85:     _delay((unsigned lon
      +                          g)((200)*(1000000/4000000.0)));
  1267  00EE  3010               	movlw	16
  1268  00EF                     u787:
  1269  00EF  0B89               	decfsz	9,f
  1270  00F0  28EF               	goto	u787
  1271  00F1  3200               	nop2
  1272  00F2                     l1095:
  1273                           
  1274                           ;../../Assignment Four/ET420_Assignment4_Morrissey.X/lcd.c: 86:     writeLCD(0x0f,0);
  1275  00F2  0020               	movlb	0	; select bank0
  1276  00F3  01A2               	clrf	writeLCD@rs
  1277  00F4  300F               	movlw	15
  1278  00F5  3181  217E  3180   	fcall	_writeLCD
  1279  00F8                     l1097:
  1280                           
  1281                           ;../../Assignment Four/ET420_Assignment4_Morrissey.X/lcd.c: 91:     _delay((unsigned lon
      +                          g)((200)*(1000000/4000000.0)));
  1282  00F8  3010               	movlw	16
  1283  00F9                     u797:
  1284  00F9  0B89               	decfsz	9,f
  1285  00FA  28F9               	goto	u797
  1286  00FB  3200               	nop2
  1287                           
  1288                           ;../../Assignment Four/ET420_Assignment4_Morrissey.X/lcd.c: 92:     writeLCD(0x06,0);
  1289  00FC  0020               	movlb	0	; select bank0
  1290  00FD  01A2               	clrf	writeLCD@rs
  1291  00FE  3006               	movlw	6
  1292  00FF  3181  217E  3180   	fcall	_writeLCD
  1293  0102                     l1099:
  1294                           
  1295                           ;../../Assignment Four/ET420_Assignment4_Morrissey.X/lcd.c: 96:      _delay((unsigned lo
      +                          ng)((200)*(1000000/4000000.0)));
  1296  0102  3010               	movlw	16
  1297  0103                     u807:
  1298  0103  0B89               	decfsz	9,f
  1299  0104  2903               	goto	u807
  1300  0105  3200               	nop2
  1301  0106                     l1101:
  1302                           
  1303                           ;../../Assignment Four/ET420_Assignment4_Morrissey.X/lcd.c: 97:      writeLCD(0x01,0);
  1304  0106  0020               	movlb	0	; select bank0
  1305  0107  01A2               	clrf	writeLCD@rs
  1306  0108  3001               	movlw	1
  1307  0109  3181  217E  3180   	fcall	_writeLCD
  1308                           
  1309                           ;../../Assignment Four/ET420_Assignment4_Morrissey.X/lcd.c: 101:      _delay((unsigned l
      +                          ong)((5)*(1000000/4000.0)));
  1310  010C  30FA               	movlw	250
  1311  010D                     u817:
  1312  010D  3200               	nop2
  1313  010E  0B89               	decfsz	9,f
  1314  010F  290D               	goto	u817
  1315  0110                     l1103:
  1316                           
  1317                           ;../../Assignment Four/ET420_Assignment4_Morrissey.X/lcd.c: 102:       writeLCD(0x02,0);
  1318  0110  0020               	movlb	0	; select bank0
  1319  0111  01A2               	clrf	writeLCD@rs
  1320  0112  3002               	movlw	2
  1321  0113  3181  217E  3180   	fcall	_writeLCD
  1322  0116                     l1105:
  1323                           
  1324                           ;../../Assignment Four/ET420_Assignment4_Morrissey.X/lcd.c: 106:     _delay((unsigned lo
      +                          ng)((5)*(1000000/4000.0)));
  1325  0116  30FA               	movlw	250
  1326  0117                     u827:
  1327  0117  3200               	nop2
  1328  0118  0B89               	decfsz	9,f
  1329  0119  2917               	goto	u827
  1330  011A                     l28:
  1331  011A  0008               	return
  1332  011B                     __end_of_lcd_Initialize:
  1333                           
  1334                           	psect	text4
  1335  0270                     __ptext4:	
  1336 ;; *************** function _lcdDisplay *****************
  1337 ;; Defined at:
  1338 ;;		line 135 in file "../../Assignment Four/ET420_Assignment4_Morrissey.X/lcd.c"
  1339 ;; Parameters:    Size  Location     Type
  1340 ;;  D               1    wreg     unsigned char 
  1341 ;;  C               1    6[BANK0 ] unsigned char 
  1342 ;;  B               1    7[BANK0 ] unsigned char 
  1343 ;; Auto vars:     Size  Location     Type
  1344 ;;  D               1    8[BANK0 ] unsigned char 
  1345 ;; Return value:  Size  Location     Type
  1346 ;;                  1    wreg      void 
  1347 ;; Registers used:
  1348 ;;		wreg, status,2, status,0, pclath, cstack
  1349 ;; Tracked objects:
  1350 ;;		On entry : 0/0
  1351 ;;		On exit  : 0/0
  1352 ;;		Unchanged: 0/0
  1353 ;; Data sizes:     COMMON   BANK0   BANK1
  1354 ;;      Params:         0       2       0
  1355 ;;      Locals:         0       1       0
  1356 ;;      Temps:          0       0       0
  1357 ;;      Totals:         0       3       0
  1358 ;;Total ram usage:        3 bytes
  1359 ;; Hardware stack levels used:    1
  1360 ;; Hardware stack levels required when called:    6
  1361 ;; This function calls:
  1362 ;;		_writeLCD
  1363 ;; This function is called by:
  1364 ;;		_main
  1365 ;; This function uses a non-reentrant model
  1366 ;;
  1367                           
  1368                           
  1369                           ;psect for function _lcdDisplay
  1370  0270                     _lcdDisplay:
  1371                           
  1372                           ;incstack = 0
  1373                           ; Regs used in _lcdDisplay: [wreg+status,2+status,0+pclath+cstack]
  1374                           ;lcdDisplay@D stored from wreg
  1375  0270  0020               	movlb	0	; select bank0
  1376  0271  00A8               	movwf	lcdDisplay@D
  1377  0272                     l1123:
  1378                           
  1379                           ;../../Assignment Four/ET420_Assignment4_Morrissey.X/lcd.c: 135:     void lcdDisplay (un
      +                          signed char D, unsigned char C, unsigned char B);../../Assignment Four/ET420_Assignment4
      +                          _Morrissey.X/lcd.c: 136: {;../../Assignment Four/ET420_Assignment4_Morrissey.X/lcd.c: 13
      +                          7:         if(D==1)
  1380  0272  0328               	decf	lcdDisplay@D,w
  1381  0273  1D03               	btfss	3,2
  1382  0274  2A76               	goto	u621
  1383  0275  2A77               	goto	u620
  1384  0276                     u621:
  1385  0276  2A78               	goto	l1127
  1386  0277                     u620:
  1387  0277                     l1125:
  1388                           
  1389                           ;../../Assignment Four/ET420_Assignment4_Morrissey.X/lcd.c: 138:             B |= 0x04;
  1390  0277  1527               	bsf	lcdDisplay@B,2
  1391  0278                     l1127:
  1392                           
  1393                           ;../../Assignment Four/ET420_Assignment4_Morrissey.X/lcd.c: 139:         if(C==1)
  1394  0278  0326               	decf	lcdDisplay@C,w
  1395  0279  1D03               	btfss	3,2
  1396  027A  2A7C               	goto	u631
  1397  027B  2A7D               	goto	u630
  1398  027C                     u631:
  1399  027C  2A7E               	goto	l40
  1400  027D                     u630:
  1401  027D                     l1129:
  1402                           
  1403                           ;../../Assignment Four/ET420_Assignment4_Morrissey.X/lcd.c: 140:             B |= 0x02;
  1404  027D  14A7               	bsf	lcdDisplay@B,1
  1405  027E                     l40:
  1406                           
  1407                           ;../../Assignment Four/ET420_Assignment4_Morrissey.X/lcd.c: 142:             B |= 0x08;
  1408  027E  15A7               	bsf	lcdDisplay@B,3
  1409  027F                     l1131:
  1410                           
  1411                           ;../../Assignment Four/ET420_Assignment4_Morrissey.X/lcd.c: 144:         writeLCD(B,0);
  1412  027F  01A2               	clrf	writeLCD@rs
  1413  0280  0827               	movf	lcdDisplay@B,w
  1414  0281  3181  217E  3182   	fcall	_writeLCD
  1415  0284                     l1133:
  1416                           
  1417                           ;../../Assignment Four/ET420_Assignment4_Morrissey.X/lcd.c: 145:         _delay((unsigne
      +                          d long)((200)*(1000000/4000000.0)));
  1418  0284  3010               	movlw	16
  1419  0285                     u837:
  1420  0285  0B89               	decfsz	9,f
  1421  0286  2A85               	goto	u837
  1422  0287  3200               	nop2
  1423  0288                     l41:
  1424  0288  0008               	return
  1425  0289                     __end_of_lcdDisplay:
  1426                           
  1427                           	psect	text5
  1428  0217                     __ptext5:	
  1429 ;; *************** function _goTo *****************
  1430 ;; Defined at:
  1431 ;;		line 114 in file "../../Assignment Four/ET420_Assignment4_Morrissey.X/lcd.c"
  1432 ;; Parameters:    Size  Location     Type
  1433 ;;  pos             1    wreg     unsigned char 
  1434 ;;  line            1    6[BANK0 ] unsigned char 
  1435 ;; Auto vars:     Size  Location     Type
  1436 ;;  pos             1    8[BANK0 ] unsigned char 
  1437 ;; Return value:  Size  Location     Type
  1438 ;;                  1    wreg      void 
  1439 ;; Registers used:
  1440 ;;		wreg, status,2, status,0, pclath, cstack
  1441 ;; Tracked objects:
  1442 ;;		On entry : 0/0
  1443 ;;		On exit  : 0/0
  1444 ;;		Unchanged: 0/0
  1445 ;; Data sizes:     COMMON   BANK0   BANK1
  1446 ;;      Params:         0       1       0
  1447 ;;      Locals:         0       1       0
  1448 ;;      Temps:          0       1       0
  1449 ;;      Totals:         0       3       0
  1450 ;;Total ram usage:        3 bytes
  1451 ;; Hardware stack levels used:    1
  1452 ;; Hardware stack levels required when called:    6
  1453 ;; This function calls:
  1454 ;;		_writeLCD
  1455 ;; This function is called by:
  1456 ;;		_main
  1457 ;; This function uses a non-reentrant model
  1458 ;;
  1459                           
  1460                           
  1461                           ;psect for function _goTo
  1462  0217                     _goTo:
  1463                           
  1464                           ;incstack = 0
  1465                           ; Regs used in _goTo: [wreg+status,2+status,0+pclath+cstack]
  1466                           ;goTo@pos stored from wreg
  1467  0217  0020               	movlb	0	; select bank0
  1468  0218  00A8               	movwf	goTo@pos
  1469  0219                     l1109:
  1470                           
  1471                           ;../../Assignment Four/ET420_Assignment4_Morrissey.X/lcd.c: 114:     void goTo(unsigned 
      +                          char pos, unsigned char line);../../Assignment Four/ET420_Assignment4_Morrissey.X/lcd.c:
      +                           115: {;../../Assignment Four/ET420_Assignment4_Morrissey.X/lcd.c: 116:     if(pos > 39)
  1472  0219  3028               	movlw	40
  1473  021A  0228               	subwf	goTo@pos,w
  1474  021B  1C03               	skipc
  1475  021C  2A1E               	goto	u601
  1476  021D  2A1F               	goto	u600
  1477  021E                     u601:
  1478  021E  2A20               	goto	l1113
  1479  021F                     u600:
  1480  021F  2A36               	goto	l32
  1481  0220                     l1113:
  1482                           
  1483                           ;../../Assignment Four/ET420_Assignment4_Morrissey.X/lcd.c: 118:     pos += 0x80;
  1484  0220  3080               	movlw	128
  1485  0221  00A7               	movwf	??_goTo
  1486  0222  0827               	movf	??_goTo,w
  1487  0223  07A8               	addwf	goTo@pos,f
  1488                           
  1489                           ;../../Assignment Four/ET420_Assignment4_Morrissey.X/lcd.c: 119:     if(line == 1)
  1490  0224  0326               	decf	goTo@line,w
  1491  0225  1D03               	btfss	3,2
  1492  0226  2A28               	goto	u611
  1493  0227  2A29               	goto	u610
  1494  0228                     u611:
  1495  0228  2A2D               	goto	l1117
  1496  0229                     u610:
  1497  0229                     l1115:
  1498                           
  1499                           ;../../Assignment Four/ET420_Assignment4_Morrissey.X/lcd.c: 120:         pos += 0x40;
  1500  0229  3040               	movlw	64
  1501  022A  00A7               	movwf	??_goTo
  1502  022B  0827               	movf	??_goTo,w
  1503  022C  07A8               	addwf	goTo@pos,f
  1504  022D                     l1117:
  1505                           
  1506                           ;../../Assignment Four/ET420_Assignment4_Morrissey.X/lcd.c: 121:     writeLCD(pos,0);
  1507  022D  01A2               	clrf	writeLCD@rs
  1508  022E  0828               	movf	goTo@pos,w
  1509  022F  3181  217E  3182   	fcall	_writeLCD
  1510  0232                     l1119:
  1511                           
  1512                           ;../../Assignment Four/ET420_Assignment4_Morrissey.X/lcd.c: 122:     _delay((unsigned lo
      +                          ng)((200)*(1000000/4000000.0)));
  1513  0232  3010               	movlw	16
  1514  0233                     u847:
  1515  0233  0B89               	decfsz	9,f
  1516  0234  2A33               	goto	u847
  1517  0235  3200               	nop2
  1518  0236                     l32:
  1519  0236  0008               	return
  1520  0237                     __end_of_goTo:
  1521                           
  1522                           	psect	text6
  1523  017E                     __ptext6:	
  1524 ;; *************** function _writeLCD *****************
  1525 ;; Defined at:
  1526 ;;		line 38 in file "../../Assignment Four/ET420_Assignment4_Morrissey.X/lcd.c"
  1527 ;; Parameters:    Size  Location     Type
  1528 ;;  out             1    wreg     unsigned char 
  1529 ;;  rs              1    2[BANK0 ] unsigned char 
  1530 ;; Auto vars:     Size  Location     Type
  1531 ;;  out             1    5[BANK0 ] unsigned char 
  1532 ;; Return value:  Size  Location     Type
  1533 ;;                  1    wreg      void 
  1534 ;; Registers used:
  1535 ;;		wreg, status,2, status,0, pclath, cstack
  1536 ;; Tracked objects:
  1537 ;;		On entry : 0/0
  1538 ;;		On exit  : 0/0
  1539 ;;		Unchanged: 0/0
  1540 ;; Data sizes:     COMMON   BANK0   BANK1
  1541 ;;      Params:         0       1       0
  1542 ;;      Locals:         0       1       0
  1543 ;;      Temps:          0       2       0
  1544 ;;      Totals:         0       4       0
  1545 ;;Total ram usage:        4 bytes
  1546 ;; Hardware stack levels used:    1
  1547 ;; Hardware stack levels required when called:    5
  1548 ;; This function calls:
  1549 ;;		_clockE
  1550 ;;		_writebyteLCD
  1551 ;; This function is called by:
  1552 ;;		_lcd_Initialize
  1553 ;;		_goTo
  1554 ;;		_lcdDisplay
  1555 ;;		_stringToLCD
  1556 ;;		_main
  1557 ;;		_cLCD
  1558 ;;		_lcdHome
  1559 ;; This function uses a non-reentrant model
  1560 ;;
  1561                           
  1562                           
  1563                           ;psect for function _writeLCD
  1564  017E                     _writeLCD:
  1565                           
  1566                           ;incstack = 0
  1567                           ; Regs used in _writeLCD: [wreg+status,2+status,0+pclath+cstack]
  1568                           ;writeLCD@out stored from wreg
  1569  017E  0020               	movlb	0	; select bank0
  1570  017F  00A5               	movwf	writeLCD@out
  1571  0180                     l1025:
  1572                           
  1573                           ;../../Assignment Four/ET420_Assignment4_Morrissey.X/lcd.c: 38:     void writeLCD(unsign
      +                          ed char out, unsigned char rs);../../Assignment Four/ET420_Assignment4_Morrissey.X/lcd.c
      +                          : 39: {;../../Assignment Four/ET420_Assignment4_Morrissey.X/lcd.c: 40:     LATC5 = rs;
  1574  0180  1822               	btfsc	writeLCD@rs,0
  1575  0181  2983               	goto	u521
  1576  0182  2986               	goto	u520
  1577  0183                     u521:
  1578  0183  0022               	movlb	2	; select bank2
  1579  0184  168E               	bsf	14,5	;volatile
  1580  0185  2988               	goto	u534
  1581  0186                     u520:
  1582  0186  0022               	movlb	2	; select bank2
  1583  0187  128E               	bcf	14,5	;volatile
  1584  0188                     u534:
  1585  0188                     l1027:
  1586                           
  1587                           ;../../Assignment Four/ET420_Assignment4_Morrissey.X/lcd.c: 41:     writebyteLCD(out);
  1588  0188  0020               	movlb	0	; select bank0
  1589  0189  0825               	movf	writeLCD@out,w
  1590  018A  3181  21CF  3181   	fcall	_writebyteLCD
  1591  018D                     l1029:
  1592                           
  1593                           ;../../Assignment Four/ET420_Assignment4_Morrissey.X/lcd.c: 42:     clockE();
  1594  018D  3182  22C7  3181   	fcall	_clockE
  1595                           
  1596                           ;../../Assignment Four/ET420_Assignment4_Morrissey.X/lcd.c: 43:     _delay((unsigned lon
      +                          g)((200)*(1000000/4000000.0)));
  1597  0190  3010               	movlw	16
  1598  0191                     u857:
  1599  0191  0B89               	decfsz	9,f
  1600  0192  2991               	goto	u857
  1601  0193  3200               	nop2
  1602  0194                     l1031:
  1603                           
  1604                           ;../../Assignment Four/ET420_Assignment4_Morrissey.X/lcd.c: 44:     out = out<<4;
  1605  0194  0020               	movlb	0	; select bank0
  1606  0195  0825               	movf	writeLCD@out,w
  1607  0196  00A3               	movwf	??_writeLCD
  1608  0197  3003               	movlw	3
  1609  0198                     u545:
  1610  0198  35A3               	lslf	??_writeLCD,f
  1611  0199  3EFF               	addlw	-1
  1612  019A  1D03               	skipz
  1613  019B  2998               	goto	u545
  1614  019C  3523               	lslf	??_writeLCD,w
  1615  019D  00A4               	movwf	??_writeLCD+1
  1616  019E  0824               	movf	??_writeLCD+1,w
  1617  019F  00A5               	movwf	writeLCD@out
  1618  01A0                     l1033:
  1619                           
  1620                           ;../../Assignment Four/ET420_Assignment4_Morrissey.X/lcd.c: 45:     writebyteLCD(out);
  1621  01A0  0825               	movf	writeLCD@out,w
  1622  01A1  3181  21CF  3181   	fcall	_writebyteLCD
  1623  01A4                     l1035:
  1624                           
  1625                           ;../../Assignment Four/ET420_Assignment4_Morrissey.X/lcd.c: 46:     clockE();
  1626  01A4  3182  22C7  3181   	fcall	_clockE
  1627  01A7                     l25:
  1628  01A7  0008               	return
  1629  01A8                     __end_of_writeLCD:
  1630                           
  1631                           	psect	text7
  1632  01CF                     __ptext7:	
  1633 ;; *************** function _writebyteLCD *****************
  1634 ;; Defined at:
  1635 ;;		line 14 in file "../../Assignment Four/ET420_Assignment4_Morrissey.X/lcd.c"
  1636 ;; Parameters:    Size  Location     Type
  1637 ;;  out             1    wreg     unsigned char 
  1638 ;; Auto vars:     Size  Location     Type
  1639 ;;  out             1    0[BANK0 ] unsigned char 
  1640 ;;  mask            1    0        unsigned char 
  1641 ;; Return value:  Size  Location     Type
  1642 ;;                  1    wreg      void 
  1643 ;; Registers used:
  1644 ;;		wreg, status,2, status,0
  1645 ;; Tracked objects:
  1646 ;;		On entry : 0/0
  1647 ;;		On exit  : 0/0
  1648 ;;		Unchanged: 0/0
  1649 ;; Data sizes:     COMMON   BANK0   BANK1
  1650 ;;      Params:         0       0       0
  1651 ;;      Locals:         0       2       0
  1652 ;;      Temps:          0       0       0
  1653 ;;      Totals:         0       2       0
  1654 ;;Total ram usage:        2 bytes
  1655 ;; Hardware stack levels used:    1
  1656 ;; Hardware stack levels required when called:    4
  1657 ;; This function calls:
  1658 ;;		Nothing
  1659 ;; This function is called by:
  1660 ;;		_writeLCD
  1661 ;;		_lcd_Initialize
  1662 ;; This function uses a non-reentrant model
  1663 ;;
  1664                           
  1665                           
  1666                           ;psect for function _writebyteLCD
  1667  01CF                     _writebyteLCD:
  1668                           
  1669                           ;incstack = 0
  1670                           ; Regs used in _writebyteLCD: [wreg+status,2+status,0]
  1671                           ;writebyteLCD@out stored from wreg
  1672  01CF  0020               	movlb	0	; select bank0
  1673  01D0  00A0               	movwf	writebyteLCD@out
  1674  01D1                     l993:
  1675  01D1                     l995:
  1676                           
  1677                           ;../../Assignment Four/ET420_Assignment4_Morrissey.X/lcd.c: 17:     LATC2 = ((out & mask
      +                          ) == mask) ? 1:0;
  1678  01D1  1BA0               	btfsc	writebyteLCD@out,7
  1679  01D2  29D4               	goto	u361
  1680  01D3  29D7               	goto	u360
  1681  01D4                     u361:
  1682  01D4  0022               	movlb	2	; select bank2
  1683  01D5  150E               	bsf	14,2	;volatile
  1684  01D6  29D9               	goto	u374
  1685  01D7                     u360:
  1686  01D7  0022               	movlb	2	; select bank2
  1687  01D8  110E               	bcf	14,2	;volatile
  1688  01D9                     u374:
  1689  01D9                     l997:
  1690                           
  1691                           ;../../Assignment Four/ET420_Assignment4_Morrissey.X/lcd.c: 19:     LATC1 = ((out & mask
      +                          ) == mask) ? 1 : 0 ;
  1692  01D9  0020               	movlb	0	; select bank0
  1693  01DA  1B20               	btfsc	writebyteLCD@out,6
  1694  01DB  29DD               	goto	u381
  1695  01DC  29E0               	goto	u380
  1696  01DD                     u381:
  1697  01DD  0022               	movlb	2	; select bank2
  1698  01DE  148E               	bsf	14,1	;volatile
  1699  01DF  29E2               	goto	u394
  1700  01E0                     u380:
  1701  01E0  0022               	movlb	2	; select bank2
  1702  01E1  108E               	bcf	14,1	;volatile
  1703  01E2                     u394:
  1704  01E2                     l999:
  1705  01E2                     l1001:
  1706                           
  1707                           ;../../Assignment Four/ET420_Assignment4_Morrissey.X/lcd.c: 21:     LATC0 = ((out & mask
      +                          ) == mask) ? 1 : 0 ;
  1708  01E2  0020               	movlb	0	; select bank0
  1709  01E3  1AA0               	btfsc	writebyteLCD@out,5
  1710  01E4  29E6               	goto	u401
  1711  01E5  29E9               	goto	u400
  1712  01E6                     u401:
  1713  01E6  0022               	movlb	2	; select bank2
  1714  01E7  140E               	bsf	14,0	;volatile
  1715  01E8  29EB               	goto	u414
  1716  01E9                     u400:
  1717  01E9  0022               	movlb	2	; select bank2
  1718  01EA  100E               	bcf	14,0	;volatile
  1719  01EB                     u414:
  1720  01EB                     l1003:
  1721                           
  1722                           ;../../Assignment Four/ET420_Assignment4_Morrissey.X/lcd.c: 23:     LATA2 = ((out & mask
      +                          ) == mask) ? 1 : 0 ;
  1723  01EB  0020               	movlb	0	; select bank0
  1724  01EC  1A20               	btfsc	writebyteLCD@out,4
  1725  01ED  29EF               	goto	u421
  1726  01EE  29F2               	goto	u420
  1727  01EF                     u421:
  1728  01EF  0022               	movlb	2	; select bank2
  1729  01F0  150C               	bsf	12,2	;volatile
  1730  01F1  29F4               	goto	u434
  1731  01F2                     u420:
  1732  01F2  0022               	movlb	2	; select bank2
  1733  01F3  110C               	bcf	12,2	;volatile
  1734  01F4                     u434:
  1735  01F4                     l19:
  1736  01F4  0008               	return
  1737  01F5                     __end_of_writebyteLCD:
  1738                           
  1739                           	psect	text8
  1740  02C7                     __ptext8:	
  1741 ;; *************** function _clockE *****************
  1742 ;; Defined at:
  1743 ;;		line 28 in file "../../Assignment Four/ET420_Assignment4_Morrissey.X/lcd.c"
  1744 ;; Parameters:    Size  Location     Type
  1745 ;;		None
  1746 ;; Auto vars:     Size  Location     Type
  1747 ;;		None
  1748 ;; Return value:  Size  Location     Type
  1749 ;;                  1    wreg      void 
  1750 ;; Registers used:
  1751 ;;		None
  1752 ;; Tracked objects:
  1753 ;;		On entry : 0/0
  1754 ;;		On exit  : 0/0
  1755 ;;		Unchanged: 0/0
  1756 ;; Data sizes:     COMMON   BANK0   BANK1
  1757 ;;      Params:         0       0       0
  1758 ;;      Locals:         0       0       0
  1759 ;;      Temps:          0       0       0
  1760 ;;      Totals:         0       0       0
  1761 ;;Total ram usage:        0 bytes
  1762 ;; Hardware stack levels used:    1
  1763 ;; Hardware stack levels required when called:    4
  1764 ;; This function calls:
  1765 ;;		Nothing
  1766 ;; This function is called by:
  1767 ;;		_writeLCD
  1768 ;;		_lcd_Initialize
  1769 ;;		_lcdHome
  1770 ;; This function uses a non-reentrant model
  1771 ;;
  1772                           
  1773                           
  1774                           ;psect for function _clockE
  1775  02C7                     _clockE:
  1776  02C7                     l1007:	
  1777                           ;incstack = 0
  1778                           ; Regs used in _clockE: []
  1779                           
  1780                           
  1781                           ;../../Assignment Four/ET420_Assignment4_Morrissey.X/lcd.c: 30:     LATC3 = 1;
  1782  02C7  0022               	movlb	2	; select bank2
  1783  02C8  158E               	bsf	14,3	;volatile
  1784                           
  1785                           ;../../Assignment Four/ET420_Assignment4_Morrissey.X/lcd.c: 31:     _delay((unsigned lon
      +                          g)((10)*(1000000/4000000.0)));
  1786  02C9  3200               	nop2	;2 cycle nop
  1787                           
  1788                           ;../../Assignment Four/ET420_Assignment4_Morrissey.X/lcd.c: 32:     LATC3 = 0;
  1789  02CA  0022               	movlb	2	; select bank2
  1790  02CB  118E               	bcf	14,3	;volatile
  1791                           
  1792                           ;../../Assignment Four/ET420_Assignment4_Morrissey.X/lcd.c: 33:     _delay((unsigned lon
      +                          g)((10)*(1000000/4000000.0)));
  1793  02CC  3200               	nop2	;2 cycle nop
  1794  02CD                     l22:	
  1795                           ;../../Assignment Four/ET420_Assignment4_Morrissey.X/lcd.c: 35:     return;
  1796                           
  1797  02CD  0008               	return
  1798  02CE                     __end_of_clockE:
  1799                           
  1800                           	psect	intentry
  1801  0004                     __pintentry:	
  1802 ;; *************** function _isr *****************
  1803 ;; Defined at:
  1804 ;;		line 112 in file "watchdog_demo.c"
  1805 ;; Parameters:    Size  Location     Type
  1806 ;;		None
  1807 ;; Auto vars:     Size  Location     Type
  1808 ;;		None
  1809 ;; Return value:  Size  Location     Type
  1810 ;;                  1    wreg      void 
  1811 ;; Registers used:
  1812 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1813 ;; Tracked objects:
  1814 ;;		On entry : 0/0
  1815 ;;		On exit  : 0/0
  1816 ;;		Unchanged: 0/0
  1817 ;; Data sizes:     COMMON   BANK0   BANK1
  1818 ;;      Params:         0       0       0
  1819 ;;      Locals:         0       0       0
  1820 ;;      Temps:          0       0       0
  1821 ;;      Totals:         0       0       0
  1822 ;;Total ram usage:        0 bytes
  1823 ;; Hardware stack levels used:    1
  1824 ;; Hardware stack levels required when called:    3
  1825 ;; This function calls:
  1826 ;;		i1_goTo
  1827 ;;		i1_stringToLCD
  1828 ;; This function is called by:
  1829 ;;		Interrupt level 1
  1830 ;; This function uses a non-reentrant model
  1831 ;;
  1832                           
  1833  0004                     _isr:
  1834                           
  1835                           ;incstack = 0
  1836  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  1837                           
  1838                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1839  0005  3180               	pagesel	$
  1840  0006                     i1l1233:
  1841                           
  1842                           ;watchdog_demo.c: 114:     if(IOCAF0)
  1843  0006  0027               	movlb	7	; select bank7
  1844  0007  1C13               	btfss	19,0	;volatile
  1845  0008  280A               	goto	u69_21
  1846  0009  280B               	goto	u69_20
  1847  000A                     u69_21:
  1848  000A  281A               	goto	i1l1243
  1849  000B                     u69_20:
  1850  000B                     i1l1235:
  1851  000B  0064               	clrwdt	;# 
  1852  000C                     i1l1237:
  1853                           
  1854                           ;watchdog_demo.c: 117:         goTo(4,0);
  1855  000C  01F6               	clrf	i1goTo@line
  1856  000D  3004               	movlw	4
  1857  000E  3182  2237  3180   	fcall	i1_goTo
  1858  0011                     i1l1239:
  1859                           
  1860                           ;watchdog_demo.c: 118:         stringToLCD(runningMsg);
  1861  0011  30B5               	movlw	low (_runningMsg| (0+32768))
  1862  0012  00F6               	movwf	i1stringToLCD@message
  1863  0013  3082               	movlw	high (_runningMsg| (0+32768))
  1864  0014  00F7               	movwf	i1stringToLCD@message+1
  1865  0015  3181  214E  3180   	fcall	i1_stringToLCD
  1866  0018                     i1l1241:
  1867                           
  1868                           ;watchdog_demo.c: 119:         IOCAF0 = 0;
  1869  0018  0027               	movlb	7	; select bank7
  1870  0019  1013               	bcf	19,0	;volatile
  1871  001A                     i1l1243:
  1872                           
  1873                           ;watchdog_demo.c: 122:     if(IOCAF1)
  1874  001A  1C93               	btfss	19,1	;volatile
  1875  001B  281D               	goto	u70_21
  1876  001C  281E               	goto	u70_20
  1877  001D                     u70_21:
  1878  001D  282D               	goto	i1l119
  1879  001E                     u70_20:
  1880  001E                     i1l1245:
  1881                           
  1882                           ;watchdog_demo.c: 123:     {;watchdog_demo.c: 124:         IOCAF1 = 0;
  1883  001E  1093               	bcf	19,1	;volatile
  1884  001F                     i1l1247:
  1885                           
  1886                           ;watchdog_demo.c: 125:         goTo(4,0);
  1887  001F  01F6               	clrf	i1goTo@line
  1888  0020  3004               	movlw	4
  1889  0021  3182  2237  3180   	fcall	i1_goTo
  1890  0024                     i1l1249:
  1891                           
  1892                           ;watchdog_demo.c: 126:         stringToLCD(sleepMsg);
  1893  0024  30AC               	movlw	low (_sleepMsg| (0+32768))
  1894  0025  00F6               	movwf	i1stringToLCD@message
  1895  0026  3082               	movlw	high (_sleepMsg| (0+32768))
  1896  0027  00F7               	movwf	i1stringToLCD@message+1
  1897  0028  3181  214E  3180   	fcall	i1_stringToLCD
  1898  002B  0063               	sleep	;# 
  1899  002C                     i1l1251:
  1900                           
  1901                           ;watchdog_demo.c: 128:         __nop();
  1902  002C  0000               	nop
  1903  002D                     i1l119:
  1904  002D  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1905  002E  0009               	retfie
  1906  002F                     __end_of_isr:
  1907                           
  1908                           	psect	text10
  1909  014E                     __ptext10:	
  1910 ;; *************** function i1_stringToLCD *****************
  1911 ;; Defined at:
  1912 ;;		line 159 in file "../../Assignment Four/ET420_Assignment4_Morrissey.X/lcd.c"
  1913 ;; Parameters:    Size  Location     Type
  1914 ;;  message         2    6[COMMON] PTR unsigned char 
  1915 ;;		 -> sleepMsg(9), runningMsg(9), startingMsg(9), 
  1916 ;; Auto vars:     Size  Location     Type
  1917 ;;  i               2   10[COMMON] unsigned int 
  1918 ;;  x               1   12[COMMON] unsigned char 
  1919 ;; Return value:  Size  Location     Type
  1920 ;;                  1    wreg      void 
  1921 ;; Registers used:
  1922 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1923 ;; Tracked objects:
  1924 ;;		On entry : 0/0
  1925 ;;		On exit  : 0/0
  1926 ;;		Unchanged: 0/0
  1927 ;; Data sizes:     COMMON   BANK0   BANK1
  1928 ;;      Params:         2       0       0
  1929 ;;      Locals:         3       0       0
  1930 ;;      Temps:          2       0       0
  1931 ;;      Totals:         7       0       0
  1932 ;;Total ram usage:        7 bytes
  1933 ;; Hardware stack levels used:    1
  1934 ;; Hardware stack levels required when called:    2
  1935 ;; This function calls:
  1936 ;;		i1_strlen
  1937 ;;		i1_writeLCD
  1938 ;; This function is called by:
  1939 ;;		_isr
  1940 ;; This function uses a non-reentrant model
  1941 ;;
  1942                           
  1943                           
  1944                           ;psect for function i1_stringToLCD
  1945  014E                     i1_stringToLCD:
  1946  014E                     i1l1161:	
  1947                           ;incstack = 0
  1948                           ; Regs used in i1_stringToLCD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1949                           
  1950                           
  1951                           ;../../Assignment Four/ET420_Assignment4_Morrissey.X/lcd.c: 159:     void stringToLCD(ch
      +                          ar message[]);../../Assignment Four/ET420_Assignment4_Morrissey.X/lcd.c: 160: {;../../As
      +                          signment Four/ET420_Assignment4_Morrissey.X/lcd.c: 161:     unsigned int i = strlen(mess
      +                          age);
  1952  014E  0877               	movf	i1stringToLCD@message+1,w
  1953  014F  00F1               	movwf	i1strlen@s+1
  1954  0150  0876               	movf	i1stringToLCD@message,w
  1955  0151  00F0               	movwf	i1strlen@s
  1956  0152  3182  2289  3181   	fcall	i1_strlen
  1957  0155  0871               	movf	?i1_strlen+1,w
  1958  0156  00FB               	movwf	i1stringToLCD@i+1
  1959  0157  0870               	movf	?i1_strlen,w
  1960  0158  00FA               	movwf	i1stringToLCD@i
  1961  0159                     i1l1163:
  1962                           
  1963                           ;../../Assignment Four/ET420_Assignment4_Morrissey.X/lcd.c: 162:     for(char x = 0; x<i
      +                          ; x++)
  1964  0159  01FC               	clrf	i1stringToLCD@x
  1965  015A  2970               	goto	i1l1169
  1966  015B                     i1l1165:
  1967                           
  1968                           ;../../Assignment Four/ET420_Assignment4_Morrissey.X/lcd.c: 163:     {;../../Assignment 
      +                          Four/ET420_Assignment4_Morrissey.X/lcd.c: 164:         writeLCD(message[x],1);
  1969  015B  01F2               	clrf	i1writeLCD@rs
  1970  015C  0AF2               	incf	i1writeLCD@rs,f
  1971  015D  0877               	movf	i1stringToLCD@message+1,w
  1972  015E  00F9               	movwf	??i1_stringToLCD+1
  1973  015F  0876               	movf	i1stringToLCD@message,w
  1974  0160  00F8               	movwf	??i1_stringToLCD
  1975  0161  087C               	movf	i1stringToLCD@x,w
  1976  0162  0778               	addwf	??i1_stringToLCD,w
  1977  0163  0084               	movwf	4
  1978  0164  0879               	movf	??i1_stringToLCD+1,w
  1979  0165  1803               	skipnc
  1980  0166  0A79               	incf	??i1_stringToLCD+1,w
  1981  0167  0085               	movwf	5
  1982  0168  0800               	movf	0,w	;code access
  1983  0169  3181  21A8  3181   	fcall	i1_writeLCD
  1984  016C                     i1l1167:
  1985                           
  1986                           ;../../Assignment Four/ET420_Assignment4_Morrissey.X/lcd.c: 165:     }
  1987  016C  3001               	movlw	1
  1988  016D  00F8               	movwf	??i1_stringToLCD
  1989  016E  0878               	movf	??i1_stringToLCD,w
  1990  016F  07FC               	addwf	i1stringToLCD@x,f
  1991  0170                     i1l1169:
  1992  0170  087C               	movf	i1stringToLCD@x,w
  1993  0171  00F8               	movwf	??i1_stringToLCD
  1994  0172  01F9               	clrf	??i1_stringToLCD+1
  1995  0173  087B               	movf	i1stringToLCD@i+1,w
  1996  0174  0279               	subwf	??i1_stringToLCD+1,w
  1997  0175  1D03               	skipz
  1998  0176  2979               	goto	u67_25
  1999  0177  087A               	movf	i1stringToLCD@i,w
  2000  0178  0278               	subwf	??i1_stringToLCD,w
  2001  0179                     u67_25:
  2002  0179  1C03               	skipc
  2003  017A  297C               	goto	u67_21
  2004  017B  297D               	goto	u67_20
  2005  017C                     u67_21:
  2006  017C  295B               	goto	i1l1165
  2007  017D                     u67_20:
  2008  017D                     i1l50:
  2009  017D  0008               	return
  2010  017E                     __end_ofi1_stringToLCD:
  2011                           
  2012                           	psect	text11
  2013  0289                     __ptext11:	
  2014 ;; *************** function i1_strlen *****************
  2015 ;; Defined at:
  2016 ;;		line 5 in file "C:\Program Files\Microchip\pic\sources\c99\common\strlen.c"
  2017 ;; Parameters:    Size  Location     Type
  2018 ;;  s               2    0[COMMON] PTR const unsigned char 
  2019 ;;		 -> sleepMsg(9), runningMsg(9), startingMsg(9), 
  2020 ;; Auto vars:     Size  Location     Type
  2021 ;;  a               2    3[COMMON] PTR const unsigned char 
  2022 ;;		 -> sleepMsg(9), runningMsg(9), startingMsg(9), 
  2023 ;; Return value:  Size  Location     Type
  2024 ;;                  2    0[COMMON] unsigned int 
  2025 ;; Registers used:
  2026 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2027 ;; Tracked objects:
  2028 ;;		On entry : 0/0
  2029 ;;		On exit  : 0/0
  2030 ;;		Unchanged: 0/0
  2031 ;; Data sizes:     COMMON   BANK0   BANK1
  2032 ;;      Params:         2       0       0
  2033 ;;      Locals:         2       0       0
  2034 ;;      Temps:          1       0       0
  2035 ;;      Totals:         5       0       0
  2036 ;;Total ram usage:        5 bytes
  2037 ;; Hardware stack levels used:    1
  2038 ;; This function calls:
  2039 ;;		Nothing
  2040 ;; This function is called by:
  2041 ;;		i1_stringToLCD
  2042 ;; This function uses a non-reentrant model
  2043 ;;
  2044                           
  2045                           
  2046                           ;psect for function i1_strlen
  2047  0289                     i1_strlen:
  2048  0289                     i1l1063:	
  2049                           ;incstack = 0
  2050                           ; Regs used in i1_strlen: [wreg-fsr0h+status,2+status,0]
  2051                           
  2052  0289  0871               	movf	i1strlen@s+1,w
  2053  028A  00F4               	movwf	i1strlen@a+1
  2054  028B  0870               	movf	i1strlen@s,w
  2055  028C  00F3               	movwf	i1strlen@a
  2056  028D  2A92               	goto	i1l1067
  2057  028E                     i1l1065:
  2058  028E  3001               	movlw	1
  2059  028F  07F0               	addwf	i1strlen@s,f
  2060  0290  3000               	movlw	0
  2061  0291  3DF1               	addwfc	i1strlen@s+1,f
  2062  0292                     i1l1067:
  2063  0292  0870               	movf	i1strlen@s,w
  2064  0293  0084               	movwf	4
  2065  0294  0871               	movf	i1strlen@s+1,w
  2066  0295  0085               	movwf	5
  2067  0296  0012               	moviw fsr0++
  2068  0297  1D03               	btfss	3,2
  2069  0298  2A9A               	goto	u59_21
  2070  0299  2A9B               	goto	u59_20
  2071  029A                     u59_21:
  2072  029A  2A8E               	goto	i1l1065
  2073  029B                     u59_20:
  2074  029B                     i1l1069:
  2075  029B  0873               	movf	i1strlen@a,w
  2076  029C  0270               	subwf	i1strlen@s,w
  2077  029D  00F0               	movwf	?i1_strlen
  2078  029E  0874               	movf	i1strlen@a+1,w
  2079  029F  3B71               	subwfb	i1strlen@s+1,w
  2080  02A0  00F1               	movwf	?i1_strlen+1
  2081  02A1                     i1l731:
  2082  02A1  0008               	return
  2083  02A2                     __end_ofi1_strlen:
  2084                           
  2085                           	psect	text12
  2086  0237                     __ptext12:	
  2087 ;; *************** function i1_goTo *****************
  2088 ;; Defined at:
  2089 ;;		line 114 in file "../../Assignment Four/ET420_Assignment4_Morrissey.X/lcd.c"
  2090 ;; Parameters:    Size  Location     Type
  2091 ;;  pos             1    wreg     unsigned char 
  2092 ;;  line            1    6[COMMON] unsigned char 
  2093 ;; Auto vars:     Size  Location     Type
  2094 ;;  pos             1    8[COMMON] unsigned char 
  2095 ;; Return value:  Size  Location     Type
  2096 ;;                  1    wreg      void 
  2097 ;; Registers used:
  2098 ;;		wreg, status,2, status,0, pclath, cstack
  2099 ;; Tracked objects:
  2100 ;;		On entry : 0/0
  2101 ;;		On exit  : 0/0
  2102 ;;		Unchanged: 0/0
  2103 ;; Data sizes:     COMMON   BANK0   BANK1
  2104 ;;      Params:         1       0       0
  2105 ;;      Locals:         1       0       0
  2106 ;;      Temps:          1       0       0
  2107 ;;      Totals:         3       0       0
  2108 ;;Total ram usage:        3 bytes
  2109 ;; Hardware stack levels used:    1
  2110 ;; Hardware stack levels required when called:    2
  2111 ;; This function calls:
  2112 ;;		i1_writeLCD
  2113 ;; This function is called by:
  2114 ;;		_isr
  2115 ;; This function uses a non-reentrant model
  2116 ;;
  2117                           
  2118                           
  2119                           ;psect for function i1_goTo
  2120  0237                     i1_goTo:
  2121                           
  2122                           ;incstack = 0
  2123                           ; Regs used in i1_goTo: [wreg+status,2+status,0+pclath+cstack]
  2124                           ;i1goTo@pos stored from wreg
  2125  0237  00F8               	movwf	i1goTo@pos
  2126  0238                     i1l1147:
  2127                           
  2128                           ;../../Assignment Four/ET420_Assignment4_Morrissey.X/lcd.c: 114:     void goTo(unsigned 
      +                          char pos, unsigned char line);../../Assignment Four/ET420_Assignment4_Morrissey.X/lcd.c:
      +                           115: {;../../Assignment Four/ET420_Assignment4_Morrissey.X/lcd.c: 116:     if(pos > 39)
  2129  0238  3028               	movlw	40
  2130  0239  0278               	subwf	i1goTo@pos,w
  2131  023A  1C03               	skipc
  2132  023B  2A3D               	goto	u65_21
  2133  023C  2A3E               	goto	u65_20
  2134  023D                     u65_21:
  2135  023D  2A3F               	goto	i1l1151
  2136  023E                     u65_20:
  2137  023E  2A55               	goto	i1l32
  2138  023F                     i1l1151:
  2139                           
  2140                           ;../../Assignment Four/ET420_Assignment4_Morrissey.X/lcd.c: 118:     pos += 0x80;
  2141  023F  3080               	movlw	128
  2142  0240  00F7               	movwf	??i1_goTo
  2143  0241  0877               	movf	??i1_goTo,w
  2144  0242  07F8               	addwf	i1goTo@pos,f
  2145                           
  2146                           ;../../Assignment Four/ET420_Assignment4_Morrissey.X/lcd.c: 119:     if(line == 1)
  2147  0243  0376               	decf	i1goTo@line,w
  2148  0244  1D03               	btfss	3,2
  2149  0245  2A47               	goto	u66_21
  2150  0246  2A48               	goto	u66_20
  2151  0247                     u66_21:
  2152  0247  2A4C               	goto	i1l1155
  2153  0248                     u66_20:
  2154  0248                     i1l1153:
  2155                           
  2156                           ;../../Assignment Four/ET420_Assignment4_Morrissey.X/lcd.c: 120:         pos += 0x40;
  2157  0248  3040               	movlw	64
  2158  0249  00F7               	movwf	??i1_goTo
  2159  024A  0877               	movf	??i1_goTo,w
  2160  024B  07F8               	addwf	i1goTo@pos,f
  2161  024C                     i1l1155:
  2162                           
  2163                           ;../../Assignment Four/ET420_Assignment4_Morrissey.X/lcd.c: 121:     writeLCD(pos,0);
  2164  024C  01F2               	clrf	i1writeLCD@rs
  2165  024D  0878               	movf	i1goTo@pos,w
  2166  024E  3181  21A8  3182   	fcall	i1_writeLCD
  2167  0251                     i1l1157:
  2168                           
  2169                           ;../../Assignment Four/ET420_Assignment4_Morrissey.X/lcd.c: 122:     _delay((unsigned lo
      +                          ng)((200)*(1000000/4000000.0)));
  2170  0251  3010               	movlw	16
  2171  0252                     u86_27:
  2172  0252  0B89               	decfsz	9,f
  2173  0253  2A52               	goto	u86_27
  2174  0254  3200               	nop2
  2175  0255                     i1l32:
  2176  0255  0008               	return
  2177  0256                     __end_ofi1_goTo:
  2178                           
  2179                           	psect	text13
  2180  01A8                     __ptext13:	
  2181 ;; *************** function i1_writeLCD *****************
  2182 ;; Defined at:
  2183 ;;		line 38 in file "../../Assignment Four/ET420_Assignment4_Morrissey.X/lcd.c"
  2184 ;; Parameters:    Size  Location     Type
  2185 ;;  out             1    wreg     unsigned char 
  2186 ;;  rs              1    2[COMMON] unsigned char 
  2187 ;; Auto vars:     Size  Location     Type
  2188 ;;  out             1    5[COMMON] unsigned char 
  2189 ;; Return value:  Size  Location     Type
  2190 ;;                  1    wreg      void 
  2191 ;; Registers used:
  2192 ;;		wreg, status,2, status,0, pclath, cstack
  2193 ;; Tracked objects:
  2194 ;;		On entry : 0/0
  2195 ;;		On exit  : 0/0
  2196 ;;		Unchanged: 0/0
  2197 ;; Data sizes:     COMMON   BANK0   BANK1
  2198 ;;      Params:         1       0       0
  2199 ;;      Locals:         1       0       0
  2200 ;;      Temps:          2       0       0
  2201 ;;      Totals:         4       0       0
  2202 ;;Total ram usage:        4 bytes
  2203 ;; Hardware stack levels used:    1
  2204 ;; Hardware stack levels required when called:    1
  2205 ;; This function calls:
  2206 ;;		i1_clockE
  2207 ;;		i1_writebyteLCD
  2208 ;; This function is called by:
  2209 ;;		i1_goTo
  2210 ;;		i1_stringToLCD
  2211 ;; This function uses a non-reentrant model
  2212 ;;
  2213                           
  2214                           
  2215                           ;psect for function i1_writeLCD
  2216  01A8                     i1_writeLCD:
  2217                           
  2218                           ;incstack = 0
  2219                           ; Regs used in i1_writeLCD: [wreg+status,2+status,0+pclath+cstack]
  2220                           ;i1writeLCD@out stored from wreg
  2221  01A8  00F5               	movwf	i1writeLCD@out
  2222  01A9                     i1l1049:
  2223                           
  2224                           ;../../Assignment Four/ET420_Assignment4_Morrissey.X/lcd.c: 38:     void writeLCD(unsign
      +                          ed char out, unsigned char rs);../../Assignment Four/ET420_Assignment4_Morrissey.X/lcd.c
      +                          : 39: {;../../Assignment Four/ET420_Assignment4_Morrissey.X/lcd.c: 40:     LATC5 = rs;
  2225  01A9  1872               	btfsc	i1writeLCD@rs,0
  2226  01AA  29AC               	goto	u56_21
  2227  01AB  29AF               	goto	u56_20
  2228  01AC                     u56_21:
  2229  01AC  0022               	movlb	2	; select bank2
  2230  01AD  168E               	bsf	14,5	;volatile
  2231  01AE  29B1               	goto	u57_24
  2232  01AF                     u56_20:
  2233  01AF  0022               	movlb	2	; select bank2
  2234  01B0  128E               	bcf	14,5	;volatile
  2235  01B1                     u57_24:
  2236  01B1                     i1l1051:
  2237                           
  2238                           ;../../Assignment Four/ET420_Assignment4_Morrissey.X/lcd.c: 41:     writebyteLCD(out);
  2239  01B1  0875               	movf	i1writeLCD@out,w
  2240  01B2  3181  21F5  3181   	fcall	i1_writebyteLCD
  2241  01B5                     i1l1053:
  2242                           
  2243                           ;../../Assignment Four/ET420_Assignment4_Morrissey.X/lcd.c: 42:     clockE();
  2244  01B5  3182  22CE  3181   	fcall	i1_clockE
  2245                           
  2246                           ;../../Assignment Four/ET420_Assignment4_Morrissey.X/lcd.c: 43:     _delay((unsigned lon
      +                          g)((200)*(1000000/4000000.0)));
  2247  01B8  3010               	movlw	16
  2248  01B9                     u87_27:
  2249  01B9  0B89               	decfsz	9,f
  2250  01BA  29B9               	goto	u87_27
  2251  01BB  3200               	nop2
  2252  01BC                     i1l1055:
  2253                           
  2254                           ;../../Assignment Four/ET420_Assignment4_Morrissey.X/lcd.c: 44:     out = out<<4;
  2255  01BC  0875               	movf	i1writeLCD@out,w
  2256  01BD  00F3               	movwf	??i1_writeLCD
  2257  01BE  3003               	movlw	3
  2258  01BF                     u58_25:
  2259  01BF  35F3               	lslf	??i1_writeLCD,f
  2260  01C0  3EFF               	addlw	-1
  2261  01C1  1D03               	skipz
  2262  01C2  29BF               	goto	u58_25
  2263  01C3  3573               	lslf	??i1_writeLCD,w
  2264  01C4  00F4               	movwf	??i1_writeLCD+1
  2265  01C5  0874               	movf	??i1_writeLCD+1,w
  2266  01C6  00F5               	movwf	i1writeLCD@out
  2267  01C7                     i1l1057:
  2268                           
  2269                           ;../../Assignment Four/ET420_Assignment4_Morrissey.X/lcd.c: 45:     writebyteLCD(out);
  2270  01C7  0875               	movf	i1writeLCD@out,w
  2271  01C8  3181  21F5  3181   	fcall	i1_writebyteLCD
  2272  01CB                     i1l1059:
  2273                           
  2274                           ;../../Assignment Four/ET420_Assignment4_Morrissey.X/lcd.c: 46:     clockE();
  2275  01CB  3182  22CE  3181   	fcall	i1_clockE
  2276  01CE                     i1l25:
  2277  01CE  0008               	return
  2278  01CF                     __end_ofi1_writeLCD:
  2279                           
  2280                           	psect	text14
  2281  01F5                     __ptext14:	
  2282 ;; *************** function i1_writebyteLCD *****************
  2283 ;; Defined at:
  2284 ;;		line 14 in file "../../Assignment Four/ET420_Assignment4_Morrissey.X/lcd.c"
  2285 ;; Parameters:    Size  Location     Type
  2286 ;;  out             1    wreg     unsigned char 
  2287 ;; Auto vars:     Size  Location     Type
  2288 ;;  out             1    0[COMMON] unsigned char 
  2289 ;;  mask            1    0        unsigned char 
  2290 ;; Return value:  Size  Location     Type
  2291 ;;                  1    wreg      void 
  2292 ;; Registers used:
  2293 ;;		wreg, status,2, status,0
  2294 ;; Tracked objects:
  2295 ;;		On entry : 0/0
  2296 ;;		On exit  : 0/0
  2297 ;;		Unchanged: 0/0
  2298 ;; Data sizes:     COMMON   BANK0   BANK1
  2299 ;;      Params:         0       0       0
  2300 ;;      Locals:         2       0       0
  2301 ;;      Temps:          0       0       0
  2302 ;;      Totals:         2       0       0
  2303 ;;Total ram usage:        2 bytes
  2304 ;; Hardware stack levels used:    1
  2305 ;; This function calls:
  2306 ;;		Nothing
  2307 ;; This function is called by:
  2308 ;;		i1_writeLCD
  2309 ;; This function uses a non-reentrant model
  2310 ;;
  2311                           
  2312                           
  2313                           ;psect for function i1_writebyteLCD
  2314  01F5                     i1_writebyteLCD:
  2315                           
  2316                           ;incstack = 0
  2317                           ; Regs used in i1_writebyteLCD: [wreg+status,2+status,0]
  2318                           ;i1writebyteLCD@out stored from wreg
  2319  01F5  00F0               	movwf	i1writebyteLCD@out
  2320  01F6                     i1l1009:
  2321  01F6                     i1l1011:
  2322                           
  2323                           ;../../Assignment Four/ET420_Assignment4_Morrissey.X/lcd.c: 17:     LATC2 = ((out & mask
      +                          ) == mask) ? 1:0;
  2324  01F6  1BF0               	btfsc	i1writebyteLCD@out,7
  2325  01F7  29F9               	goto	u44_21
  2326  01F8  29FC               	goto	u44_20
  2327  01F9                     u44_21:
  2328  01F9  0022               	movlb	2	; select bank2
  2329  01FA  150E               	bsf	14,2	;volatile
  2330  01FB  29FE               	goto	u45_24
  2331  01FC                     u44_20:
  2332  01FC  0022               	movlb	2	; select bank2
  2333  01FD  110E               	bcf	14,2	;volatile
  2334  01FE                     u45_24:
  2335  01FE                     i1l1013:
  2336                           
  2337                           ;../../Assignment Four/ET420_Assignment4_Morrissey.X/lcd.c: 19:     LATC1 = ((out & mask
      +                          ) == mask) ? 1 : 0 ;
  2338  01FE  1B70               	btfsc	i1writebyteLCD@out,6
  2339  01FF  2A01               	goto	u46_21
  2340  0200  2A04               	goto	u46_20
  2341  0201                     u46_21:
  2342  0201  0022               	movlb	2	; select bank2
  2343  0202  148E               	bsf	14,1	;volatile
  2344  0203  2A06               	goto	u47_24
  2345  0204                     u46_20:
  2346  0204  0022               	movlb	2	; select bank2
  2347  0205  108E               	bcf	14,1	;volatile
  2348  0206                     u47_24:
  2349  0206                     i1l1015:
  2350  0206                     i1l1017:
  2351                           
  2352                           ;../../Assignment Four/ET420_Assignment4_Morrissey.X/lcd.c: 21:     LATC0 = ((out & mask
      +                          ) == mask) ? 1 : 0 ;
  2353  0206  1AF0               	btfsc	i1writebyteLCD@out,5
  2354  0207  2A09               	goto	u48_21
  2355  0208  2A0C               	goto	u48_20
  2356  0209                     u48_21:
  2357  0209  0022               	movlb	2	; select bank2
  2358  020A  140E               	bsf	14,0	;volatile
  2359  020B  2A0E               	goto	u49_24
  2360  020C                     u48_20:
  2361  020C  0022               	movlb	2	; select bank2
  2362  020D  100E               	bcf	14,0	;volatile
  2363  020E                     u49_24:
  2364  020E                     i1l1019:
  2365                           
  2366                           ;../../Assignment Four/ET420_Assignment4_Morrissey.X/lcd.c: 23:     LATA2 = ((out & mask
      +                          ) == mask) ? 1 : 0 ;
  2367  020E  1A70               	btfsc	i1writebyteLCD@out,4
  2368  020F  2A11               	goto	u50_21
  2369  0210  2A14               	goto	u50_20
  2370  0211                     u50_21:
  2371  0211  0022               	movlb	2	; select bank2
  2372  0212  150C               	bsf	12,2	;volatile
  2373  0213  2A16               	goto	u51_24
  2374  0214                     u50_20:
  2375  0214  0022               	movlb	2	; select bank2
  2376  0215  110C               	bcf	12,2	;volatile
  2377  0216                     u51_24:
  2378  0216                     i1l19:
  2379  0216  0008               	return
  2380  0217                     __end_ofi1_writebyteLCD:
  2381                           
  2382                           	psect	text15
  2383  02CE                     __ptext15:	
  2384 ;; *************** function i1_clockE *****************
  2385 ;; Defined at:
  2386 ;;		line 28 in file "../../Assignment Four/ET420_Assignment4_Morrissey.X/lcd.c"
  2387 ;; Parameters:    Size  Location     Type
  2388 ;;		None
  2389 ;; Auto vars:     Size  Location     Type
  2390 ;;		None
  2391 ;; Return value:  Size  Location     Type
  2392 ;;                  1    wreg      void 
  2393 ;; Registers used:
  2394 ;;		None
  2395 ;; Tracked objects:
  2396 ;;		On entry : 0/0
  2397 ;;		On exit  : 0/0
  2398 ;;		Unchanged: 0/0
  2399 ;; Data sizes:     COMMON   BANK0   BANK1
  2400 ;;      Params:         0       0       0
  2401 ;;      Locals:         0       0       0
  2402 ;;      Temps:          0       0       0
  2403 ;;      Totals:         0       0       0
  2404 ;;Total ram usage:        0 bytes
  2405 ;; Hardware stack levels used:    1
  2406 ;; This function calls:
  2407 ;;		Nothing
  2408 ;; This function is called by:
  2409 ;;		i1_writeLCD
  2410 ;; This function uses a non-reentrant model
  2411 ;;
  2412                           
  2413                           
  2414                           ;psect for function i1_clockE
  2415  02CE                     i1_clockE:
  2416  02CE                     i1l1023:	
  2417                           ;incstack = 0
  2418                           ; Regs used in i1_clockE: []
  2419                           
  2420                           
  2421                           ;../../Assignment Four/ET420_Assignment4_Morrissey.X/lcd.c: 30:     LATC3 = 1;
  2422  02CE  0022               	movlb	2	; select bank2
  2423  02CF  158E               	bsf	14,3	;volatile
  2424                           
  2425                           ;../../Assignment Four/ET420_Assignment4_Morrissey.X/lcd.c: 31:     _delay((unsigned lon
      +                          g)((10)*(1000000/4000000.0)));
  2426  02D0  3200               	nop2	;2 cycle nop
  2427                           
  2428                           ;../../Assignment Four/ET420_Assignment4_Morrissey.X/lcd.c: 32:     LATC3 = 0;
  2429  02D1  0022               	movlb	2	; select bank2
  2430  02D2  118E               	bcf	14,3	;volatile
  2431                           
  2432                           ;../../Assignment Four/ET420_Assignment4_Morrissey.X/lcd.c: 33:     _delay((unsigned lon
      +                          g)((10)*(1000000/4000000.0)));
  2433  02D3  3200               	nop2	;2 cycle nop
  2434  02D4                     i1l22:	
  2435                           ;../../Assignment Four/ET420_Assignment4_Morrissey.X/lcd.c: 35:     return;
  2436                           
  2437  02D4  0008               	return
  2438  02D5                     __end_ofi1_clockE:
  2439  007E                     btemp	set	126	;btemp
  2440  007E                     int$flags	set	126
  2441  007E                     wtemp0	set	126
  2442                           
  2443                           	psect	config
  2444                           
  2445                           ;Config register CONFIG1 @ 0x8007
  2446                           ;	Oscillator Selection
  2447                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  2448                           ;	Watchdog Timer Enable
  2449                           ;	WDTE = NSLEEP, WDT enabled while running and disabled in Sleep
  2450                           ;	Power-up Timer Enable
  2451                           ;	PWRTE = OFF, PWRT disabled
  2452                           ;	MCLR Pin Function Select
  2453                           ;	MCLRE = OFF, MCLR/VPP pin function is digital input
  2454                           ;	Flash Program Memory Code Protection
  2455                           ;	CP = OFF, Program memory code protection is disabled
  2456                           ;	Data Memory Code Protection
  2457                           ;	CPD = OFF, Data memory code protection is disabled
  2458                           ;	Brown-out Reset Enable
  2459                           ;	BOREN = ON, Brown-out Reset enabled
  2460                           ;	Clock Out Enable
  2461                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  2462                           ;	Internal/External Switchover
  2463                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2464                           ;	Fail-Safe Clock Monitor Enable
  2465                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2466  8007                     	org	32775
  2467  8007  0FB4               	dw	4020
  2468                           
  2469                           ;Config register CONFIG2 @ 0x8008
  2470                           ;	Flash Memory Self-Write Protection
  2471                           ;	WRT = OFF, Write protection off
  2472                           ;	PLL Enable
  2473                           ;	PLLEN = ON, 4x PLL enabled
  2474                           ;	Stack Overflow/Underflow Reset Enable
  2475                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  2476                           ;	Brown-out Reset Voltage Selection
  2477                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  2478                           ;	Low-Voltage Programming Enable
  2479                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  2480  8008                     	org	32776
  2481  8008  1FFF               	dw	8191

Data Sizes:
    Strings     0
    Constant    37
    Data        0
    BSS         0
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     16      16
    BANK1            32      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 9
		 -> sleepMsg(CODE[9]), runningMsg(CODE[9]), startingMsg(CODE[9]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 9
		 -> sleepMsg(CODE[9]), runningMsg(CODE[9]), startingMsg(CODE[9]), 

    stringToLCD@message	PTR unsigned char  size(2) Largest target is 9
		 -> sleepMsg(CODE[9]), runningMsg(CODE[9]), startingMsg(CODE[9]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->i1_stringToLCD
    i1_stringToLCD->i1_writeLCD
    i1_goTo->i1_writeLCD
    i1_writeLCD->i1_writebyteLCD

Critical Paths under _main in BANK0

    _main->_stringToLCD
    _stringToLCD->_writeLCD
    _lcd_Initialize->_writeLCD
    _lcdDisplay->_writeLCD
    _goTo->_writeLCD
    _writeLCD->_writebyteLCD

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    7829
                                             13 BANK0      3     3      0
                               _goTo
                         _lcdDisplay
                     _lcd_Initialize
                        _stringToLCD
                           _writeLCD
 ---------------------------------------------------------------------------------
 (1) _stringToLCD                                          7     5      2    1800
                                              6 BANK0      7     5      2
                             _strlen
                           _writeLCD
 ---------------------------------------------------------------------------------
 (2) _strlen                                               5     3      2     166
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _lcd_Initialize                                       1     1      0    1537
                                              6 BANK0      1     1      0
                             _clockE
                           _writeLCD
                       _writebyteLCD
 ---------------------------------------------------------------------------------
 (1) _lcdDisplay                                           3     1      2    1490
                                              6 BANK0      3     1      2
                           _writeLCD
 ---------------------------------------------------------------------------------
 (1) _goTo                                                 3     2      1    1665
                                              6 BANK0      3     2      1
                           _writeLCD
 ---------------------------------------------------------------------------------
 (1) _writeLCD                                             4     3      1    1269
                                              2 BANK0      4     3      1
                             _clockE
                       _writebyteLCD
 ---------------------------------------------------------------------------------
 (2) _writebyteLCD                                         2     2      0     268
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _clockE                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  0     0      0    1219
                             i1_goTo
                      i1_stringToLCD
 ---------------------------------------------------------------------------------
 (5) i1_stringToLCD                                        7     5      2     690
                                              6 COMMON     7     5      2
                           i1_strlen
                         i1_writeLCD
 ---------------------------------------------------------------------------------
 (6) i1_strlen                                             5     3      2     116
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (5) i1_goTo                                               3     2      1     529
                                              6 COMMON     3     2      1
                         i1_writeLCD
 ---------------------------------------------------------------------------------
 (6) i1_writeLCD                                           4     3      1     409
                                              2 COMMON     4     3      1
                           i1_clockE
                     i1_writebyteLCD
 ---------------------------------------------------------------------------------
 (7) i1_writebyteLCD                                       2     2      0     268
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (7) i1_clockE                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _goTo
     _writeLCD
       _clockE
       _writebyteLCD
   _lcdDisplay
     _writeLCD
       _clockE
       _writebyteLCD
   _lcd_Initialize
     _clockE
     _writeLCD
       _clockE
       _writebyteLCD
     _writebyteLCD
   _stringToLCD
     _strlen
     _writeLCD
       _clockE
       _writebyteLCD
   _writeLCD
     _clockE
     _writebyteLCD

 _isr (ROOT)
   i1_goTo
     i1_writeLCD
       i1_clockE
       i1_writebyteLCD
   i1_stringToLCD
     i1_strlen
     i1_writeLCD
       i1_clockE
       i1_writebyteLCD

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       0       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     10      10       6       20.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0       0       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Mar 07 18:18:13 2021

                     l22 02CD                       l32 0236                       l40 027E  
                     l25 01A7                       l41 0288                       l50 014D  
                     l19 01F4                       l28 011A                      l731 026F  
                    l993 01D1                      l995 01D1                      l997 01D9  
                    l999 01E2                      u400 01E9                      u401 01E6  
                    u420 01F2                      u421 01EF                      u414 01EB  
                    u360 01D7                      u520 0186                      u600 021F  
                    u361 01D4                      u521 0183                      u601 021E  
                    u434 01F4                      u610 0229                      u611 0228  
                    u380 01E0                      u620 0277                      u381 01DD  
                    u621 0276                      u374 01D9                      u534 0188  
                    u630 027D                      u550 0269                      u631 027C  
                    u551 0268                      u640 014D                      u545 0198  
                    u641 014C                      u394 01E2                      u645 0149  
                    u717 006E                      u807 0103                      u727 009F  
                    u680 00B7                      u817 010D                      u737 00BD  
                    u681 00B6                      u827 0117                      u747 00CC  
                    u837 0285                      u757 00D3                      u847 0233  
                    u767 00DA                      u857 0191                      u777 00E5  
                    u787 00EF                      u797 00F9                      _isr 0004  
            _startingMsg 02BE                      wreg 0009                     l1001 01E2  
                   l1003 01EB                     l1101 0106                     l1007 02C7  
                   l1031 0194                     l1103 0110                     l1033 01A0  
                   l1025 0180                     l1113 0220                     l1105 0116  
                   l1041 025C                     l1201 004F                     l1035 01A4  
                   l1027 0188                     l1115 0229                     l1131 027F  
                   l1123 0272                     l1043 0260                     l1211 0068  
                   l1203 0050                     l1029 018D                     l1117 022D  
                   l1109 0219                     l1133 0284                     l1125 0277  
                   l1045 0269                     l1141 012A                     l1221 0085  
                   l1213 0075                     l1205 0053                     l1119 0232  
                   l1127 0278                     l1039 0256                     l1143 013B  
                   l1231 00B1                     l1223 008B                     l1215 0083  
                   l1207 005A                     l1129 027D                     l1081 00CF  
                   l1073 00B9                     l1145 0140                     l1137 011B  
                   l1225 0099                     l1209 0060                     l1091 00E4  
                   l1083 00D6                     l1075 00C2                     l1139 0128  
                   l1227 00A6                     l1093 00E8                     l1085 00D9  
                   l1077 00C4                     l1229 00AC                     l1095 00F2  
                   l1087 00DD                     l1079 00CB                     l1191 003F  
                   l1183 0033                     l1097 00F8                     l1089 00E1  
                   l1193 0041                     l1185 0035                     l1099 0102  
                   l1195 0043                     l1187 0038                     l1197 0045  
                   l1189 003D                     l1199 004E                     ?_isr 0070  
                   _LATA 010C                     _LATC 010E                     i1l22 02D4  
                   i1l32 0255                     i1l25 01CE                     i1l50 017D  
                   i1l19 0216                     _WPUA 020C                     _WPUC 020E  
                   _goTo 0217                     _main 0033                     fsr0h 0005  
                   indf0 0000                     fsr0l 0004                     btemp 007E  
             i1goTo@line 0076                     start 002F              _stringToLCD 011B  
             i1_writeLCD 01A8                    ??_isr 007D  __size_ofi1_writebyteLCD 0022  
                  ?_goTo 0026                    ?_main 0070                    _LATA2 0862  
                  _LATC0 0870                    _LATC1 0871                    _LATC2 0872  
                  _LATC3 0873                    _LATC5 0875                    _IOCAN 0392  
                  i1l119 002D                    i1l731 02A1                    u50_20 0214  
                  u50_21 0211                    u51_24 0216                    u44_20 01FC  
                  u44_21 01F9                    u45_24 01FE                    u46_20 0204  
                  u70_20 001E                    u46_21 0201                    u70_21 001D  
                  u47_24 0206                    u48_20 020C                    u56_20 01AF  
                  u48_21 0209                    u56_21 01AC                    u65_20 023E  
                  u65_21 023D                    _TRISA 008C                    u49_24 020E  
                  u57_24 01B1                    _TRISC 008E                    u66_20 0248  
                  u66_21 0247                    u58_25 01BF                    u59_20 029B  
                  u67_20 017D                    u59_21 029A                    u67_21 017C  
                  u67_25 0179                    u69_20 000B                    u69_21 000A  
                  u86_27 0252                    u87_27 01B9                    main@x 002F  
        __end_of_numbers 02AC         __end_ofi1_clockE 02D5                    status 0003  
                  wtemp0 007E         __end_ofi1_strlen 02A2    __end_ofi1_stringToLCD 017E  
        __initialization 0030             __end_of_goTo 0237             __end_of_main 00B9  
                 ??_goTo 0027                   ??_main 002D    __size_of_writebyteLCD 0026  
                 _ANSELA 018C                   _ANSELC 018E                   _IOCAF0 1C98  
                 _IOCAF1 1C99                   i1l1011 01F6                   i1l1013 01FE  
                 i1l1023 02CE                   i1l1015 0206                   i1l1017 0206  
                 i1l1009 01F6                   i1l1019 020E                   i1l1051 01B1  
                 i1l1053 01B5                   i1l1055 01BC                   i1l1151 023F  
                 i1l1063 0289                   i1l1057 01C7                   i1l1049 01A9  
                 i1l1153 0248                   i1l1065 028E                   i1l1161 014E  
                 i1l1241 0018                   i1l1233 0006                   i1l1059 01CB  
                 i1l1155 024C                   i1l1147 0238                   i1l1067 0292  
                 i1l1163 0159                   i1l1251 002C                   i1l1235 000B  
                 i1l1243 001A                   i1l1157 0251                   i1l1069 029B  
                 i1l1165 015B                   i1l1245 001E                   i1l1237 000C  
                 i1l1167 016C                   i1l1247 001F                   i1l1239 0011  
                 i1l1169 0170                   i1l1249 0024                   _OSCCON 0099  
                 _WDTCON 0097                   i1_goTo 0237                   _nWPUEN 04AF  
           _writebyteLCD 01CF                   _clockE 02C7              ?i1_writeLCD 0072  
                 _strlen 0256         __end_of_sleepMsg 02B5         __end_of_writeLCD 01A8  
          i1writeLCD@out 0075  __end_of__initialization 0030           __pcstackCOMMON 0070  
         i1_writebyteLCD 01F5                ?i1_clockE 0070                ?i1_strlen 0070  
    __size_ofi1_writeLCD 0027                  ?i1_goTo 0076             ?_stringToLCD 0026  
             __pmaintext 0033   __end_ofi1_writebyteLCD 0217               _lcdDisplay 0270  
                ?_clockE 0070               __pintentry 0004                  ?_strlen 0020  
             ??i1_clockE 0070               ??i1_strlen 0072          writebyteLCD@out 0020  
        __size_ofi1_goTo 001F  __size_of_lcd_Initialize 0062             stringToLCD@i 002A  
           stringToLCD@x 002C          ?i1_writebyteLCD 0070          __size_of_clockE 0007  
              ?_writeLCD 0022                  __ptext1 011B                  __ptext2 0256  
                __ptext3 00B9                  __ptext4 0270                  __ptext5 0217  
                __ptext6 017E                  __ptext7 01CF                  __ptext8 02C7  
        __size_of_strlen 001A             __size_of_isr 002B                  goTo@pos 0028  
                _numbers 02A2     end_of_initialization 0030              ?_lcdDisplay 0026  
           ??i1_writeLCD 0073           i1stringToLCD@i 007A           i1stringToLCD@x 007C  
                strlen@a 0023                  strlen@s 0020               ??_writeLCD 0023  
   i1stringToLCD@message 0076   __size_ofi1_stringToLCD 0030       __end_ofi1_writeLCD 01CF  
             _runningMsg 02B5                i1goTo@pos 0078           __end_ofi1_goTo 0256  
   __size_of_stringToLCD 0033           __end_of_clockE 02CE           __end_of_strlen 0270  
    start_initialization 0030        __size_ofi1_clockE 0007              __end_of_isr 002F  
              i1strlen@a 0073      __size_of_lcdDisplay 0019                i1strlen@s 0070  
      __size_ofi1_strlen 0019                 ??i1_goTo 0077           _lcd_Initialize 00B9  
          i1_stringToLCD 014E                 ??_clockE 0020                 ??_strlen 0022  
           i1writeLCD@rs 0072                ___latbits 0000            __pcstackBANK0 0020  
 __end_of_lcd_Initialize 011B         ??i1_writebyteLCD 0070           ?i1_stringToLCD 0076  
      __size_of_writeLCD 002A              writeLCD@out 0025          ?_lcd_Initialize 0070  
          ?_writebyteLCD 0070             ??_lcdDisplay 0028                 i1_clockE 02CE  
     stringToLCD@message 0026                 i1_strlen 0289       __end_of_lcdDisplay 0289  
        ??i1_stringToLCD 0078           ??_writebyteLCD 0020                 __ptext10 014E  
               __ptext11 0289                 __ptext12 0237                 __ptext13 01A8  
               __ptext14 01F5                 __ptext15 02CE            __size_of_goTo 0020  
          __size_of_main 0086               writeLCD@rs 0022                 goTo@line 0026  
          ??_stringToLCD 0028                 _sleepMsg 02AC                 int$flags 007E  
               _writeLCD 017E               _INTCONbits 000B      __end_of_startingMsg 02C7  
               intlevel1 0000              lcdDisplay@B 0027              lcdDisplay@C 0026  
            lcdDisplay@D 0028      __end_of_stringToLCD 014E            __pstringtext1 02A2  
          __pstringtext2 02AC            __pstringtext3 02B5            __pstringtext4 02BE  
      i1writebyteLCD@out 0070         ??_lcd_Initialize 0026       __end_of_runningMsg 02BE  
   __end_of_writebyteLCD 01F5  
